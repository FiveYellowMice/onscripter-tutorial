大家好，这里是FiveYellowMice给大家带来的“小白也能学会的Galgame制作”的第4讲，正如你之前所看到的，这一讲我们要学习放置人物立绘。
我们来看一下0.txt中写的内容，首先第一行，有一个半角分号加mode800,这是一个特殊的标记，必须被放在脚本的第一行，哪怕是这样在上面空出一行都不行。这个标记的意思是让游戏的分辨率变成800x600，记住，加上了这个，我们的游戏的分辨率就会变成800x600。
然后往下看，你会发现这些都是我们已经讲过的内容了，除了一行字，ld命令。这个命令是干什么的呢？我们回想一下刚刚游戏中的过程，在这两句话之间，有一张立绘出现了。所以ld命令的用处就是显示一张立绘。
ld命令有三个参数，第一个是位置，你可以写l、c或者r，分别代表英文中的left、center和right，即左、中、右。比如如果我把这里的c改成l，这张立绘就会在左侧显示……然后在半角逗号右边是文件路径，不要忘了半角引号，再右边是跟bg命令一样的效果编号，第1讲有讲过。
那么这个文件路径里头为啥有个冒号a分号呢？这个在第2讲中我们也有见到过，但是那时我没有详细说，现在我就来解释一下。
================================
一张人物立绘通常是长这样的……它与一张背景有什么区别呢？一张背景，它是方方正正的，要完整贴合游戏窗口的分辨率，现在是800x600。而一张立绘，里面的内容通常是一个人，而一个人不太可能是方的，所以立绘图片在除了必要的人形以外，其它的地方都是透明的，透明在许多图像查看器中会被显示为像国际象棋棋盘一样的格子。而一张图片中的透明部分，是怎么实现的呢？首先我们要感谢便携式网络图形格式（PNG）的发明者，W3C，是PNG格式给了图片包含透明信息的能力。然而在更加古老的年代，ONScripter足够老了，那时PNG格式还使用的很少，而传统的BMP和JPEG格式是不支持在图片中直接包含透明信息的，那么人们是怎么干的呢？
因为JPEG有压缩，会造成画质损失，所以我只拿BMP来做例子。我们用GIMP打开这张图片，不知道GIMP的可以看一下第一讲的软件安利，首先我们发现这张图片是索引颜色，为了避免不必要的麻烦我们在图像，模式里面把它转成RGB颜色。接着在右边图层这里右键，点“移除Alpha通道”。你会发现原本国际象棋棋盘一样的格子不见了，这张图片原本透明的地方现在变成了白色。然后文件，千万别点成Overwrite，要点Export As，然后文件格式这里选择按扩展名，保存为a.bmp。关掉GIMP，放弃修改。你可以看到这张a.bmp是一张白色背景的图片。
================================
然后我们去修改脚本，把这个冒号a分号中的a给改成c，再把原来的图片路径改成a.bmp的路径。然后运行游戏……大事不对啦，立绘变成了白色背景。这很好理解，因为这张立绘图片中没有包含任何透明信息，ONScripter不知道哪个地方该透明，哪个地方不该。而之前我写的冒号c分号代表让ONScripter不论如何都要展示图片的全貌，所以即使是白色的部分它也显示了出来。
================================
这显然是不行的，所以它提供了一种方式来让自己知道哪个地方该透明，现在把这里的c改成l，再运行游戏……
背景透明了！在冒号与分号之间指定了l的时候，ONScripter会获取这张图片最左上角一个像素的颜色，并且把这张图片中所有以这个颜色相同的地方全都变成透明。那么在这里就是纯白的部分全都变成透明了。
================================
但是仔细看就会发现问题，如果在这张图片中有白色、但我不想让某些白色的部分变成透明，就办不到了，比如这里眼睛高亮的部分，现在变成透明的。再往深处想，如果我想要半透明的地方，也做不到。
================================
高桥直树当然预料到了这种情况，设计了一种略微蛋疼的方式让ONScripter明确的知道哪些地方该透明，透明百分之多少，哪些地方不该透明。于是我们再用GIMP打开PNG格式的原图，转成RGB颜色。然后在右边图层这里选择Alpha到选区，GIMP就会选中不透明的部分，然后把它填充为黑色。再新建一个图层，先取消选中，再把新的图层拖到下面，然后用白色填充，然后导出为b.bmp，注意要点开高级选项把颜色设置为24位。你就可以得到这样的两张a.bmp和b.bmp，然后再用GIMP打开a.bmp，图像，画布大小，把宽度扩大到原来的两倍，391乘2是782。然后文件，作为图层打开，b.bmp。右对齐，横向中间对其。最后导出为c.bmp，还是要选择24位颜色。最后你就会得到这样一张诡异的图片，现在回到脚本把文件路径改成c.bmp，再把冒号分号中间的字母改成a。再运行游戏……完美！这是怎么做到的呢？
================================
ONScripter在你指定a的时候，会将这张图片分为左右两半，左边作为实际的内容，右边以灰度决定图片中每个像素的透明度。白色就是完全透明，黑色就是完全不透明，深度不同的灰色就是半透明，颜色越深不透明度越高。而这右半部分，专业的说法叫做Alpha。
当然现在我们不用这么麻烦了，只要在绘画这张立绘的时候拿透明做背景，导出为PNG就可以了。因为PNG可以让图片本身就包含Alpha层，就是透明信息。我讲之前的这些知识只是为了帮助理解。但是因为传统，我们还是得标注上冒号a分号，否则ONScripter会忽略这个Alpha层，不过这时它就不是把图片切成左右两部分，而是直接使用PNG里面的Alpha层。
================================
总结一下，在ld命令（以及之前的setwindow，以后还会学到更多）中，引号之内，图片路径名之前，加上冒号、一个字母、分号，表示你告诉ONScripter这张图片该如何处理透明的部分。这个字母是l代表英文的leftup，就是左上角的颜色作为变成透明的颜色；c代表英文的copy，就是无论如何忽略透明信息；a代表英文的alpha，就是使用图片右半部分的Alpha信息或PNG中的Alpha层。
如果我不写，它就会按照默认的来，默认的透明方式是l，就是左上角作为透明色。但如果你的大部分都是以a方式透明而不想给每个地方都加个冒号a分号，就可以在define区，对，就是define区，在*define和game之间加上一行，transmode alpha，这样默认就会变成以a方式表示透明。哪怕我在这里去掉这个冒号a分号，也是没有问题的。这就是我们学习的第一个用在define区里面的命令，下一讲会学习更多。
================================
对了，差点忘了说，cl命令用来消除屏幕上的立绘，参数是表示位置的l，c或者r，以及跟ld一样的效果参数，比如我在这里写上cl c,10,500，在“她是一个绝赞的人”之后立绘就会以渐变500毫秒的方式消失……

那么这一讲到这里就结束了，感谢大家的支持。喜欢我的视频就给个硬币并推荐给朋友吧，觉得我的视频做的不够好，也可以向我提出你的意见和建议。资源都已经上传到视频介绍中更多信息上面的链接里了，那么我们下期再见！
