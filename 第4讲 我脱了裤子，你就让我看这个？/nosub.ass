[Script Info]
; Script generated by FFmpeg/Lavc56.41.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:18.55,0:00:19.22,Default,,0,0,0,,大家好
Dialogue: 0,0:00:19.22,0:00:23.13,Default,,0,0,0,,这里是FiveYellowMice给大家带来的\N“小白也能学会的Galgame制作”的第4讲
Dialogue: 0,0:00:23.52,0:00:24.73,Default,,0,0,0,,正如你之前所看到的
Dialogue: 0,0:00:24.83,0:00:27.16,Default,,0,0,0,,这一讲我们来要学习如何放置人物立绘
Dialogue: 0,0:00:27.73,0:00:30.19,Default,,0,0,0,,我们来看一下0.txt中所写的内容
Dialogue: 0,0:00:30.70,0:00:31.57,Default,,0,0,0,,首先第一行
Dialogue: 0,0:00:31.67,0:00:33.47,Default,,0,0,0,,有一个半角分号加mode800
Dialogue: 0,0:00:33.88,0:00:34.87,Default,,0,0,0,,这是一个特殊的标记
Dialogue: 0,0:00:34.87,0:00:36.36,Default,,0,0,0,,必须被放在脚本的第一行
Dialogue: 0,0:00:36.71,0:00:39.47,Default,,0,0,0,,哪怕是这样在上面空出一行也不行
Dialogue: 0,0:00:39.84,0:00:42.63,Default,,0,0,0,,这个标记的意思是让游戏的分辨率变成600x800
Dialogue: 0,0:00:42.73,0:00:44.06,Default,,0,0,0,,记住 加上了这个
Dialogue: 0,0:00:44.16,0:00:46.30,Default,,0,0,0,,我们的游戏的分辨率就变成了800x600
Dialogue: 0,0:00:46.94,0:00:47.63,Default,,0,0,0,,然后往下看
Dialogue: 0,0:00:48.84,0:00:51.27,Default,,0,0,0,,你会发现这些命令都是我们已经学过的了
Dialogue: 0,0:00:51.37,0:00:52.60,Default,,0,0,0,,除了一行字
Dialogue: 0,0:00:52.70,0:00:53.74,Default,,0,0,0,,ld命令
Dialogue: 0,0:00:53.84,0:00:55.16,Default,,0,0,0,,这个命令是干什么的呢？
Dialogue: 0,0:00:55.26,0:00:57.06,Default,,0,0,0,,我们来回想一下刚刚游戏中的过程
Dialogue: 0,0:00:57.16,0:00:58.26,Default,,0,0,0,,在这两句话之间
Dialogue: 0,0:00:58.36,0:00:59.56,Default,,0,0,0,,有一张立绘出现了
Dialogue: 0,0:00:59.66,0:01:02.14,Default,,0,0,0,,所以ld命令的用处就是显示一张立绘
Dialogue: 0,0:01:02.53,0:01:04.22,Default,,0,0,0,,ld命令有三个参数
Dialogue: 0,0:01:04.50,0:01:05.79,Default,,0,0,0,,第一个参数是位置
Dialogue: 0,0:01:05.89,0:01:08.00,Default,,0,0,0,,你可以写l、c或者r
Dialogue: 0,0:01:08.10,0:01:10.68,Default,,0,0,0,,分别代表英文中的left、center和right
Dialogue: 0,0:01:10.78,0:01:11.97,Default,,0,0,0,,即左、中、右
Dialogue: 0,0:01:12.12,0:01:13.93,Default,,0,0,0,,比如如果我把这里的c改成l
Dialogue: 0,0:01:14.54,0:01:16.43,Default,,0,0,0,,这张立绘就会在左侧显示
Dialogue: 0,0:01:24.03,0:01:26.69,Default,,0,0,0,,然后在半角逗号右边是文件路径
Dialogue: 0,0:01:26.69,0:01:27.84,Default,,0,0,0,,不要忘了半角引号
Dialogue: 0,0:01:28.08,0:01:30.87,Default,,0,0,0,,然后再右边是跟bg命令一样的效果编号
Dialogue: 0,0:01:30.97,0:01:32.02,Default,,0,0,0,,第1讲有讲过
Dialogue: 0,0:01:32.64,0:01:36.50,Default,,0,0,0,,那么这个文件路径里头为啥有个冒号a分号呢？
Dialogue: 0,0:01:36.50,0:01:38.39,Default,,0,0,0,,这个在第2讲中我们也有见到过
Dialogue: 0,0:01:38.39,0:01:39.88,Default,,0,0,0,,但是那时我没有详细说
Dialogue: 0,0:01:39.88,0:01:41.27,Default,,0,0,0,,现在我就来解释一下
Dialogue: 0,0:01:41.97,0:01:43.91,Default,,0,0,0,,一张人物立绘通常是长这样的
Dialogue: 0,0:01:44.01,0:01:45.80,Default,,0,0,0,,它与一张背景有什么区别呢？
Dialogue: 0,0:01:45.90,0:01:47.53,Default,,0,0,0,,一张背景 它是方方正正的
Dialogue: 0,0:01:47.63,0:01:49.59,Default,,0,0,0,,要完整地贴合游戏窗口的分辨率
Dialogue: 0,0:01:49.49,0:01:51.38,Default,,0,0,0,,在这里是800x600
Dialogue: 0,0:01:52.57,0:01:53.54,Default,,0,0,0,,而一张立绘
Dialogue: 0,0:01:53.64,0:01:55.22,Default,,0,0,0,,里面的内容通常是一个人
Dialogue: 0,0:01:55.32,0:01:56.68,Default,,0,0,0,,而一个人不太可能是方的
Dialogue: 0,0:01:56.68,0:01:58.72,Default,,0,0,0,,所以立绘图片在除了必要的人形以外
Dialogue: 0,0:01:58.72,0:02:00.17,Default,,0,0,0,,其它的地方都是透明的
Dialogue: 0,0:02:00.27,0:02:04.21,Default,,0,0,0,,透明在许多图像查看器中会被显示为\N像国际象棋棋盘一样的格子
Dialogue: 0,0:02:04.55,0:02:06.09,Default,,0,0,0,,而一张图片中的透明部分
Dialogue: 0,0:02:06.09,0:02:07.09,Default,,0,0,0,,是怎么实现的呢？
Dialogue: 0,0:02:07.19,0:02:10.75,Default,,0,0,0,,首先我们要感谢便携式网络图形格式（PNG）的发明者
Dialogue: 0,0:02:10.85,0:02:11.47,Default,,0,0,0,,W3C
Dialogue: 0,0:02:11.57,0:02:14.71,Default,,0,0,0,,是PNG格式给了图片包含透明信息的能力
Dialogue: 0,0:02:14.81,0:02:16.24,Default,,0,0,0,,而在更加古老的年代
Dialogue: 0,0:02:16.34,0:02:17.53,Default,,0,0,0,,ONScripter足够老了
Dialogue: 0,0:02:17.63,0:02:19.75,Default,,0,0,0,,那时PNG格式还使用的很少
Dialogue: 0,0:02:19.85,0:02:24.44,Default,,0,0,0,,而传统的BMP和JPEG格式是不支持\N在图片中直接包含透明信息的
Dialogue: 0,0:02:24.54,0:02:26.38,Default,,0,0,0,,那时人们是怎么干的呢？
Dialogue: 0,0:02:27.17,0:02:28.31,Default,,0,0,0,,因为JPEG有压缩
Dialogue: 0,0:02:28.31,0:02:30.16,Default,,0,0,0,,所以我这里只拿BMP来做例子
Dialogue: 0,0:02:31.79,0:02:33.40,Default,,0,0,0,,我们用GIMP打开这张图片
Dialogue: 0,0:02:35.40,0:02:37.97,Default,,0,0,0,,不知道GIMP的可以看一下第一讲的软件安利
Dialogue: 0,0:02:38.10,0:02:40.65,Default,,0,0,0,,首先我们发现这张图片是索引颜色
Dialogue: 0,0:02:40.75,0:02:42.09,Default,,0,0,0,,为了避免不必要的麻烦
Dialogue: 0,0:02:42.09,0:02:44.62,Default,,0,0,0,,我们把这张图片转换为RGB颜色
Dialogue: 0,0:02:45.62,0:02:47.90,Default,,0,0,0,,图像 模式 RGB
Dialogue: 0,0:02:47.90,0:02:50.07,Default,,0,0,0,,接着在右边图层这里右键
Dialogue: 0,0:02:50.17,0:02:52.22,Default,,0,0,0,,点“移除Alpha通道”
Dialogue: 0,0:02:52.22,0:02:54.87,Default,,0,0,0,,你会发现原本国际棋盘一样的格子不见了
Dialogue: 0,0:02:54.97,0:02:57.39,Default,,0,0,0,,这张图片原本透明的地方现在变成了白色
Dialogue: 0,0:02:57.49,0:02:58.41,Default,,0,0,0,,然后文件
Dialogue: 0,0:02:58.51,0:02:59.91,Default,,0,0,0,,千万别点成Overwrite
Dialogue: 0,0:03:00.01,0:03:01.99,Default,,0,0,0,,一定要点Export As
Dialogue: 0,0:03:02.09,0:03:04.63,Default,,0,0,0,,然后文件格式这里选择按扩展名
Dialogue: 0,0:03:04.73,0:03:07.21,Default,,0,0,0,,保存为a.bmp
Dialogue: 0,0:03:12.66,0:03:14.42,Default,,0,0,0,,关掉GIMP 放弃修改
Dialogue: 0,0:03:15.00,0:03:18.90,Default,,0,0,0,,你可以看到这张a.bmp是一张白色背景的图片
Dialogue: 0,0:03:19.00,0:03:20.12,Default,,0,0,0,,然后我们去修改脚本
Dialogue: 0,0:03:20.83,0:03:24.16,Default,,0,0,0,,把这里冒号a分号中的a给改成c
Dialogue: 0,0:03:24.26,0:03:27.52,Default,,0,0,0,,然后把图片路径改成a.bmp的路径
Dialogue: 0,0:03:30.18,0:03:31.51,Default,,0,0,0,,然后再运行游戏
Dialogue: 0,0:03:34.60,0:03:35.56,Default,,0,0,0,,大事不对啦
Dialogue: 0,0:03:35.66,0:03:37.41,Default,,0,0,0,,图片变成了白色背景
Dialogue: 0,0:03:37.41,0:03:38.29,Default,,0,0,0,,这很好理解
Dialogue: 0,0:03:38.29,0:03:40.76,Default,,0,0,0,,因为这张立绘图片中没有包含任何透明信息
Dialogue: 0,0:03:40.86,0:03:42.83,Default,,0,0,0,,ONScripter不知道哪个地方该透明
Dialogue: 0,0:03:42.93,0:03:43.84,Default,,0,0,0,,哪个地方不该
Dialogue: 0,0:03:43.94,0:03:48.80,Default,,0,0,0,,而之前我写的冒号c分号代表让ONScripter\N不论如何都要展示图片的全貌
Dialogue: 0,0:03:48.90,0:03:51.44,Default,,0,0,0,,所以即使是白色的部分它也显示了出来
Dialogue: 0,0:03:51.73,0:03:52.73,Default,,0,0,0,,这显然是不行的
Dialogue: 0,0:03:52.83,0:03:55.55,Default,,0,0,0,,所以它提供了一种方式来让自己知道哪个地方该透明
Dialogue: 0,0:03:56.46,0:03:58.39,Default,,0,0,0,,现在把这里的c改成l
Dialogue: 0,0:03:59.57,0:04:00.53,Default,,0,0,0,,然后再运行游戏
Dialogue: 0,0:04:06.15,0:04:07.09,Default,,0,0,0,,背景透明了！
Dialogue: 0,0:04:07.19,0:04:09.65,Default,,0,0,0,,在冒号与分号之间指定了l的时候
Dialogue: 0,0:04:09.75,0:04:13.00,Default,,0,0,0,,ONScripter会获取这张图片\N最左上角一个像素（的颜色）
Dialogue: 0,0:04:13.10,0:04:16.44,Default,,0,0,0,,并且把这张图片中\N所有以这个颜色相同的地方全都变成透明
Dialogue: 0,0:04:16.61,0:04:19.22,Default,,0,0,0,,那么在这里就是纯白的部分全都变成透明了
Dialogue: 0,0:04:20.04,0:04:21.83,Default,,0,0,0,,但是仔细看就会发现问题
Dialogue: 0,0:04:21.93,0:04:23.39,Default,,0,0,0,,如果在这张图片中有白色
Dialogue: 0,0:04:23.49,0:04:25.36,Default,,0,0,0,,但我不想让某些白色的部分变成透明
Dialogue: 0,0:04:25.46,0:04:26.01,Default,,0,0,0,,就办不到了
Dialogue: 0,0:04:26.11,0:04:27.39,Default,,0,0,0,,比如这里眼睛高亮的部分
Dialogue: 0,0:04:27.49,0:04:29.02,Default,,0,0,0,,现在变成了透明的
Dialogue: 0,0:04:29.12,0:04:29.88,Default,,0,0,0,,再往深处想
Dialogue: 0,0:04:29.98,0:04:31.14,Default,,0,0,0,,如果我想要半透明的地方
Dialogue: 0,0:04:31.24,0:04:31.84,Default,,0,0,0,,也做不到
Dialogue: 0,0:04:32.46,0:04:34.63,Default,,0,0,0,,高桥直树当然预料到了这种情况
Dialogue: 0,0:04:34.73,0:04:39.00,Default,,0,0,0,,设计了一种略微蛋疼的方式\N让ONScripter明确的知道哪些地方该透明
Dialogue: 0,0:04:39.10,0:04:40.01,Default,,0,0,0,,透明百分之多少
Dialogue: 0,0:04:40.11,0:04:41.14,Default,,0,0,0,,哪些地方不该透明
Dialogue: 0,0:04:41.43,0:04:44.09,Default,,0,0,0,,于是我们再用GIMP打开PNG格式的原图
Dialogue: 0,0:04:48.99,0:04:50.25,Default,,0,0,0,,转成RGB颜色
Dialogue: 0,0:04:52.20,0:04:55.40,Default,,0,0,0,,然后在右边图层这里选择Alpha到选区
Dialogue: 0,0:04:56.74,0:04:58.59,Default,,0,0,0,,这样 GIMP就会选中不透明的部分
Dialogue: 0,0:04:58.69,0:05:00.39,Default,,0,0,0,,然后再把它填充为黑色
Dialogue: 0,0:05:01.61,0:05:03.38,Default,,0,0,0,,再新建一个图层
Dialogue: 0,0:05:07.32,0:05:08.57,Default,,0,0,0,,先取消选中
Dialogue: 0,0:05:10.24,0:05:11.87,Default,,0,0,0,,再把这个图层拖到下面
Dialogue: 0,0:05:12.51,0:05:13.78,Default,,0,0,0,,然后用白色（填充）
Dialogue: 0,0:05:15.45,0:05:18.08,Default,,0,0,0,,然后导出为b.bmp
Dialogue: 0,0:05:23.63,0:05:26.68,Default,,0,0,0,,注意要点开高级选项选择24位颜色
Dialogue: 0,0:05:29.35,0:05:34.09,Default,,0,0,0,,然后你就可以得到这样的两张a.bmp和b.bmp
Dialogue: 0,0:05:36.91,0:05:39.14,Default,,0,0,0,,再用GIMP打开a.bmp
Dialogue: 0,0:05:44.38,0:05:46.86,Default,,0,0,0,,图像 画布大小
Dialogue: 0,0:05:46.96,0:05:48.86,Default,,0,0,0,,把宽度扩大到原来的两倍
Dialogue: 0,0:05:48.96,0:05:53.01,Default,,0,0,0,,391乘2等于782
Dialogue: 0,0:05:56.41,0:06:00.01,Default,,0,0,0,,然后文件 作为图层打开
Dialogue: 0,0:06:00.11,0:06:00.98,Default,,0,0,0,,b.bmp
Dialogue: 0,0:06:01.93,0:06:05.25,Default,,0,0,0,,然后再用对其工具把它右对齐
Dialogue: 0,0:06:05.69,0:06:08.86,Default,,0,0,0,,最后导出为c.bmp
Dialogue: 0,0:06:18.44,0:06:20.91,Default,,0,0,0,,最后你就会得到这样一张诡异的图片
Dialogue: 0,0:06:21.01,0:06:26.82,Default,,0,0,0,,现在回到脚本文件 把图片路径改成c.bmp
Dialogue: 0,0:06:27.77,0:06:31.37,Default,,0,0,0,,再把冒号与分号之间改成a
Dialogue: 0,0:06:31.98,0:06:33.19,Default,,0,0,0,,再运行游戏
Dialogue: 0,0:06:38.31,0:06:39.07,Default,,0,0,0,,完美！
Dialogue: 0,0:06:40.06,0:06:41.12,Default,,0,0,0,,这是怎么做到的呢？
Dialogue: 0,0:06:41.22,0:06:42.91,Default,,0,0,0,,ONScripter在你指定a的时候
Dialogue: 0,0:06:43.01,0:06:45.09,Default,,0,0,0,,会将这张图片的内容分为左右两半
Dialogue: 0,0:06:45.19,0:06:46.70,Default,,0,0,0,,左边作为实际的内容
Dialogue: 0,0:06:46.80,0:06:49.17,Default,,0,0,0,,右边以灰度决定图片中每个像素的透明度
Dialogue: 0,0:06:49.27,0:06:50.73,Default,,0,0,0,,白色就是完全透明
Dialogue: 0,0:06:50.83,0:06:52.19,Default,,0,0,0,,黑色就是完全不透明
Dialogue: 0,0:06:52.29,0:06:54.63,Default,,0,0,0,,深度不同的灰色就是半透明
Dialogue: 0,0:06:54.73,0:06:56.20,Default,,0,0,0,,颜色越深不透明度越高
Dialogue: 0,0:06:56.30,0:06:57.48,Default,,0,0,0,,而这右半部分
Dialogue: 0,0:06:57.58,0:06:58.82,Default,,0,0,0,,专业的说法叫做Alpha
Dialogue: 0,0:06:58.93,0:07:00.70,Default,,0,0,0,,当然现在我们不用这么麻烦了
Dialogue: 0,0:07:00.80,0:07:03.37,Default,,0,0,0,,只要在绘画这张立绘的时候拿透明做背景
Dialogue: 0,0:07:03.47,0:07:04.85,Default,,0,0,0,,导出为PNG就可以了
Dialogue: 0,0:07:05.27,0:07:08.48,Default,,0,0,0,,因为PNG可以让图片本身就包含Alpha层
Dialogue: 0,0:07:08.58,0:07:09.60,Default,,0,0,0,,就是透明信息
Dialogue: 0,0:07:10.02,0:07:12.26,Default,,0,0,0,,我们讲这些知识只是为了帮助理解
Dialogue: 0,0:07:12.36,0:07:13.37,Default,,0,0,0,,但是因为传统
Dialogue: 0,0:07:13.47,0:07:16.05,Default,,0,0,0,,我们还是得标注上冒号a分号
Dialogue: 0,0:07:16.15,0:07:18.37,Default,,0,0,0,,否则ONScripter会忽略这个Alpha层
Dialogue: 0,0:07:18.47,0:07:21.52,Default,,0,0,0,,不过这时它就不是把图片切成左右两部分
Dialogue: 0,0:07:21.62,0:07:24.33,Default,,0,0,0,,而是直接就使用PNG里面的Alpha层
Dialogue: 0,0:07:24.60,0:07:25.45,Default,,0,0,0,,总结一下
Dialogue: 0,0:07:25.55,0:07:29.10,Default,,0,0,0,,在ld命令（以及之前的setwindow，以后还会学到更多）中
Dialogue: 0,0:07:29.20,0:07:30.12,Default,,0,0,0,,引号之内
Dialogue: 0,0:07:30.22,0:07:31.42,Default,,0,0,0,,图片路径名之前
Dialogue: 0,0:07:31.52,0:07:33.60,Default,,0,0,0,,加上冒号、一个字母、分号
Dialogue: 0,0:07:33.70,0:07:37.17,Default,,0,0,0,,表示你告诉ONScripter这张图片该如何处理透明的部分
Dialogue: 0,0:07:37.27,0:07:40.39,Default,,0,0,0,,这个字母是l代表英文的leftup
Dialogue: 0,0:07:40.49,0:07:42.74,Default,,0,0,0,,就是左上角的颜色作为变成透明的颜色
Dialogue: 0,0:07:42.84,0:07:44.78,Default,,0,0,0,,c代表英文的copy
Dialogue: 0,0:07:44.88,0:07:47.66,Default,,0,0,0,,就是表示无论如何忽略透明信息
Dialogue: 0,0:07:48.17,0:07:49.67,Default,,0,0,0,,a代表英文的alpha
Dialogue: 0,0:07:49.77,0:07:54.47,Default,,0,0,0,,就是使用图片右半部分的Alpha信息\N或着PNG图片中的Alpha层
Dialogue: 0,0:07:54.92,0:07:55.62,Default,,0,0,0,,如果我不写
Dialogue: 0,0:07:55.72,0:07:56.78,Default,,0,0,0,,它就会按照默认的来
Dialogue: 0,0:07:56.88,0:07:58.52,Default,,0,0,0,,默认的方式是l
Dialogue: 0,0:07:58.62,0:08:00.47,Default,,0,0,0,,就是左上角作为透明色
Dialogue: 0,0:08:00.57,0:08:03.09,Default,,0,0,0,,但如果你的大部分都是以a方式透明
Dialogue: 0,0:08:03.09,0:08:05.90,Default,,0,0,0,,而不想给每个地方都加个冒号a分号
Dialogue: 0,0:08:06.00,0:08:07.34,Default,,0,0,0,,就可以在define区
Dialogue: 0,0:08:07.44,0:08:08.53,Default,,0,0,0,,对 就是define区
Dialogue: 0,0:08:08.63,0:08:11.11,Default,,0,0,0,,在*define和game之间加上一行
Dialogue: 0,0:08:15.85,0:08:18.11,Default,,0,0,0,,transmode alpha
Dialogue: 0,0:08:18.93,0:08:21.68,Default,,0,0,0,,这样默认就会变成以a方式表示透明
Dialogue: 0,0:08:21.78,0:08:26.07,Default,,0,0,0,,哪怕我在这里去掉这个冒号a分号
Dialogue: 0,0:08:26.07,0:08:27.13,Default,,0,0,0,,也是没有问题的
Dialogue: 0,0:08:27.23,0:08:30.29,Default,,0,0,0,,这就是我们学习的第一个用在define区里面的命令
Dialogue: 0,0:08:30.39,0:08:31.73,Default,,0,0,0,,下一讲会学习更多
Dialogue: 0,0:08:32.14,0:08:33.10,Default,,0,0,0,,对了 差点忘了说
Dialogue: 0,0:08:33.20,0:08:35.16,Default,,0,0,0,,cl命令用来消除屏幕上的立绘
Dialogue: 0,0:08:35.26,0:08:38.05,Default,,0,0,0,,参数是表示位置的l、c或者r
Dialogue: 0,0:08:38.15,0:08:39.86,Default,,0,0,0,,以及跟ld一样的效果参数
Dialogue: 0,0:08:39.96,0:08:42.80,Default,,0,0,0,,比如我在这里加上
Dialogue: 0,0:08:48.69,0:08:50.59,Default,,0,0,0,,在“她是一个绝赞的人”之后
Dialogue: 0,0:08:50.69,0:08:54.34,Default,,0,0,0,,立绘就会以渐变500毫秒的方式消失
Dialogue: 0,0:09:02.94,0:09:04.46,Default,,0,0,0,,那么这一讲到这里就结束了
Dialogue: 0,0:09:04.46,0:09:05.23,Default,,0,0,0,,感谢大家的支持
Dialogue: 0,0:09:05.33,0:09:07.70,Default,,0,0,0,,喜欢我的视频就给个硬币并推荐给朋友吧
Dialogue: 0,0:09:07.80,0:09:09.30,Default,,0,0,0,,如果觉得我的视频做的不够好
Dialogue: 0,0:09:09.40,0:09:11.18,Default,,0,0,0,,也可以向我提出你的意见和建议
Dialogue: 0,0:09:11.28,0:09:14.50,Default,,0,0,0,,资源都已经上传到视频介绍中更多信息上面的链接里了
Dialogue: 0,0:09:14.60,0:09:15.87,Default,,0,0,0,,那么我们下期再见！
