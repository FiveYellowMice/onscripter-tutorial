大家好，这里是FiveYellowMice给大家带来的小白也能学会的Galgame制作的第2讲。在上一讲中我介绍了如何显示图片，或许有人已经迫不及待的想要插入声音和立绘了。但是我认为在前进之前，扎实的基础知识是必不可少的，不可以急功近利——浮躁的游戏可没人喜欢啊。不过也别过于担心，这肯定比VisualBasic、C++算法基础什么的要简单的多。所以这一讲，我们从图片的百草园，来到文字的三味书屋。

先说说从一开始就被提到但没有详细讲过的问题——文字编码。
电脑的一切都是以0和1为基础的……文本文件也肯定不例外是由0和1组成的，要显示各种各样的文字，得按一定的规律将0和1排列起来，并按照同样方法将其解读出来对应文字，而这个规律被称作文字编码。一开始米帝做出了ASCII……全称叫American Standard Code for Information Interchange，美国信息交换标准代码，为英文字符设定了编码，比如小写字母a对应的就是0110 0001。可是不用英语的人就悲剧了，于是ANSI应运而生，它会将非英文字符按照各个语言的字符集来编排组织。每种语言、每个国家用的字符集都不一样……日本目前使用的是Shift-JIS，中国大陆使用的是GB 2312、GBK、GB 18030，反正就是GB打头的，不过这三个东西其实都差不多，通常情况下你可以理解为一个东西，也能够串用。由于不同语言字符集不同，同一个0、1的组合在甲字符集中代表一个字，在乙字符集中可能就代表另外一个字。比如在Shift-JIS中的"あ"所对应的代码在GBK字符集中就是“偁”，我TMD不认识这个字儿。
因为ONScripter是日本人开发的，所以它原本使用的是Shift-JIS字符集，如果你给原本日文的ONScripter一个以GBK字符集编码的脚本文件，你会得到这个东西……
幸而有大神做了汉化，中文版的ONScripter会将文本以GBK的方式解码，所以我们每次才用的是GBK而不是Shift-JIS。同样的，如果你把一个Shift-JIS编码的脚本给中文的ONScripter，也会是乱码……
我们一直是做中文的游戏，所以也一直用的是中文的引擎，所以字符集也一直是GBK。
这个知识点是最难的一个，听不大懂的不要过于纠结。如果你还是不明白，这回的2P软件安利可能会有所帮助。

再来说说文字框位置的问题，我们通常玩的Galgame的界面布局是这样的……文字在下面，而上面通常空出来以观赏妹子。而我在之前展示的例子都是像这样的……文字占满整个屏幕。并不是因为我没有妹子给大家看，而是因为ONScripter默认就是如此。至于ONScripter为什么要默认如此，除了方便以外还是有历史原因的……
Galgame是Visual Novel(视觉小说)的一种体裁，而Visual Novel按照显示方式来分有两种类型：传统视觉小说，简写为NVL，以及冒险游戏，简写为AVG或ADV。NVL通常交互性较少而陈述的内容较多，所以文字占满整个屏幕，而AVG因为要留出屏幕中间的部分来进行交互，所以文字被限制在了下方。
NVL我们已经会做了，所以现在我们要来做一个AVG，以后，我们大多数情况下也要做的是AVG。毕竟大多数玩家都是要看妹子的嘛。
新建一个游戏工程的步骤就不必多说了，注意编码要选择GBK，我的文本编辑器给识别成了GB18030，不过就像我刚刚说的，都差不多，不用管它。按照惯例这里拿鲁迅的文章来做例子，我还在开始之前设定了一张背景。这些都是我们在上一讲学过的。
当然我想大家都已经注意到了，在文字出现的前一行有一个setwindow命令，这个命令就是设定文字窗口大小的命令。没有这条命令，显示的就是跟上一讲一样的文字占据全屏的NVL。我们来看一下加了这条命令以后的效果……文字就在屏幕下方显示了。
setwindow是ONScripter中最臭名昭著的命令，之所以这么说是因为参数太多了，一般的命令也就两三个参数左右，像之前我们学过的bg，而这个至少有11个参数！哪怕是我也记不住，每次用的时候都要看文档。幸好通常情况下整篇游戏只会用到一次。接下来我为大家一一讲解每个参数的意义。大家要好好应用小学数学。

先是第一个文字左上角的横坐标，在ONScripter里横坐标从左侧开始计算，以像素为单位，上一讲也说过了游戏默认的宽度是640像素，所以屏幕最左侧的横坐标就是0，从左到右逐渐增加，最右侧的就是640。我想让它离屏幕左侧有20像素的间隔，就写20。
然后是纵坐标，同样的从顶端开始计算，顶端是0，从上到下逐渐增加，底端就是480。我想让文字框显示3行文字，每行文字的高度是30像素，30*3=90，所以第一行文字要从480-90=390的位置开始。不过这样最后一行文字的底部就会紧贴着屏幕底端，太丑了，所一一般都底下都要留个空，我想让它空出20像素，就把第一行文字再抬高20，于是最后得出390-20=370。
然后是横向文字的个数，如我之前所说，我想让文字与屏幕左端间隔20像素，右端也是空出20像素，640-20-20=600。我又想让每个文字是30像素的宽度，600/30=20，以此得出每行显示20个字，就写上20。
然后是纵向的文字个数，就是行数，我之前说过了，是3，最多显示3行文字。
然后是每个文字的宽度，刚刚说过了是30。
然后是每个文字的高度，也说过了是30。
然后是横向字间距，就是每个文字之间的距离，我觉得我不需要，就写0。
行间距，我也写0。
然后是文字显示的速度，就是显示一个字之后，再显示下一个字的时间间隔，以毫秒记，我写20。如果我把它改大一点，比如说300毫秒……太慢了还是改回来吧。
然后是文字是否是粗体，如果要粗体就写1，我不喜欢粗体就写了0。
然后是是否有阴影，要就写1，不要就写0，我觉得有阴影会好看一些就写了1。

不过玩过Galgame的人都知道这样还是太丑了，得有个半透明的框框吧。所以我们就得给文字加个框框。
有两种方法，一种是图片的文字框，我事先自己画了一张……已经上传到资源里了，你可以自己画或者找一张合适的，放在游戏目录下或者游戏目录中的目录下。然后增加一个参数，写上这张图片的路径和文件名，注意用半角(英文)引号包起来。再加上这个图片显示时左上角的坐标，先是横坐标，20-10=10，再是纵坐标，370-10=360。
看一下效果……这张文字框图片原本应该是半透明的，可是现在却是实心的，该怎么办呢？在路径名的前方，引号之内，加上半角的冒号，小写字母a，半角的分号，然后就可以了。至于为什么要这样做，就是比较后面的知识了，这里容我买个关子。

那么这一讲到这里就结束了，虽然我花了这么长时间只讲了文字编码和文字框这两个知识点。不过这两个知识点都是ONScripter中最难的基础知识。过了这个瓶颈，接下来就是灿烂的星光大道了。如果你有疑问，给我发邮件也是可以的，我的邮箱地址在个人介绍那里。如果你觉得我做得好就给个硬币吧，做的不好你也可以发邮件提出你的意见。感谢大家的支持，希望这回访问量能多点啊！