1
00:00:00,822 --> 00:00:01,281
大家好

2
00:00:01,381 --> 00:00:05,150
这里是FiveYellowMice给大家带来的小白也能学会的Galgame制作的第2讲

3
00:00:05,250 --> 00:00:07,645
在上一讲中我介绍了如何显示图片

4
00:00:07,745 --> 00:00:10,316
或许有人已经迫不及待的想要插入声音和立绘了

5
00:00:10,416 --> 00:00:11,964
但是我认为在前进之前

6
00:00:12,064 --> 00:00:13,675
扎实的基础知识是必不可少的

7
00:00:13,775 --> 00:00:14,754
不可以急功近利

8
00:00:14,854 --> 00:00:16,322
浮躁的游戏可没人喜欢啊

9
00:00:16,630 --> 00:00:17,572
不过也别过于担心

10
00:00:17,672 --> 00:00:20,660
这肯定比VisualBasic、C++算法基础什么的要简单的多

11
00:00:20,946 --> 00:00:21,688
所以这一讲

12
00:00:21,788 --> 00:00:23,072
我们从图片的百草园

13
00:00:23,172 --> 00:00:24,694
来到文字的三味书屋

14
00:00:25,941 --> 00:00:28,737
先说说从一开始就被提到但没有详细讲过的问题

15
00:00:28,837 --> 00:00:29,464
文字编码

16
00:00:30,092 --> 00:00:32,008
电脑的一切都是以0和1组成的

17
00:00:32,108 --> 00:00:33,219
文本文件也不例外

18
00:00:33,319 --> 00:00:34,660
要显示各种各样的文字

19
00:00:34,760 --> 00:00:36,709
得按一定的规律将0和1排列起来

20
00:00:36,809 --> 00:00:38,556
而这个规律被称作文字编码

21
00:00:38,656 --> 00:00:40,340
一开始米帝做出了ASCII

22
00:00:40,440 --> 00:00:43,492
全称叫American Standard Code for Information Interchange

23
00:00:43,592 --> 00:00:45,120
美国信息交换标准代码

24
00:00:45,220 --> 00:00:46,527
为英文字符设定了编码

25
00:00:46,627 --> 00:00:49,774
比如小写字母a对应的就是0110 0001

26
00:00:49,874 --> 00:00:51,541
可是不用英文的人就悲剧了

27
00:00:51,641 --> 00:00:53,396
于是ANSI应运而生

28
00:00:53,496 --> 00:00:56,796
它会将非英文字符按照各个语言的字符集来编排组织

29
00:00:56,896 --> 00:00:59,355
每种语言 每个国家用的字符集都不一样

30
00:01:00,110 --> 00:01:02,123
日本目前使用的是Shift-JIS

31
00:01:02,223 --> 00:01:05,937
中国大陆目前使用的是GB2312
GBK GB18030

32
00:01:06,037 --> 00:01:07,607
反正就是GB打头的

33
00:01:07,707 --> 00:01:08,981
不过这三个东西其实都差不多

34
00:01:09,081 --> 00:01:10,571
通常情况下你可以理解为一个东西

35
00:01:10,671 --> 00:01:11,338
也能够串用

36
00:01:11,438 --> 00:01:13,249
由于不同语言字符集不同

37
00:01:13,349 --> 00:01:16,114
同一个0 1的组合在甲字符集中代表一个字

38
00:01:16,214 --> 00:01:18,032
在乙字符集中可能就代表另外一个字

39
00:01:18,132 --> 00:01:21,063
比如在Shift-JIS中的"あ"所对应的代码

40
00:01:21,163 --> 00:01:23,774
在GBK字符集中就是“偁”

41
00:01:23,874 --> 00:01:25,270
我TMD不认识这个字儿

42
00:01:26,442 --> 00:01:28,152
因为ONScripter是日本人开发的

43
00:01:28,252 --> 00:01:30,171
所以它原本使用的是Shift-JIS

44
00:01:30,271 --> 00:01:32,064
如果你给原本日文的ONScripter

45
00:01:32,064 --> 00:01:34,308
一个以GBK字符集编码的脚本文件

46
00:01:34,408 --> 00:01:36,226
你会得到这个东西

47
00:01:38,149 --> 00:01:39,482
幸好有大神做了汉化

48
00:01:39,582 --> 00:01:42,809
中文版的ONScripter会将文本以GBK的方式解码

49
00:01:42,909 --> 00:01:45,586
所以我们每次才用的是GBK而不是Shift-JIS

50
00:01:45,686 --> 00:01:46,222
同样的

51
00:01:46,322 --> 00:01:49,628
如果你把一个Shift-JIS编码的脚本给中文的ONScripter

52
00:01:49,728 --> 00:01:50,746
也会是乱码

53
00:01:52,880 --> 00:01:54,210
我们一直是做中文的游戏

54
00:01:54,310 --> 00:01:55,721
所以也一直用的是中文的引擎

55
00:01:55,821 --> 00:01:57,344
所以字符集也一直是GBK

56
00:01:58,427 --> 00:01:59,992
这个知识点是最难的一个

57
00:02:00,092 --> 00:02:01,575
听不大懂的不要过于纠结

58
00:02:01,675 --> 00:02:02,798
如果你还是不明白

59
00:02:02,898 --> 00:02:04,870
这回的2P软件安利可能会有所帮助

60
00:02:06,696 --> 00:02:08,553
接下来再来说说文字框位置的问题

61
00:02:08,653 --> 00:02:11,338
我们通常玩的Galgame的界面布局通常都是这样的

62
00:02:11,438 --> 00:02:12,310
文字在下面

63
00:02:12,410 --> 00:02:14,256
而上面通常空出来以观赏图(mei)片(zi)

64
00:02:14,346 --> 00:02:17,032
而我在之前展示的例子都是像这样的

65
00:02:17,132 --> 00:02:18,240
文字占满整个屏幕

66
00:02:18,340 --> 00:02:19,817
并不是因为我没有图(mei)片(zi)给大家看

67
00:02:19,917 --> 00:02:21,713
而是因为ONScripter默认就是如此

68
00:02:21,813 --> 00:02:23,649
至于ONScripter为什么要默认如此

69
00:02:23,749 --> 00:02:25,393
除了方便以外还是有历史原因的

70
00:02:25,796 --> 00:02:27,799
Galgame是Visual Novel(视觉小说)的一种体裁

71
00:02:28,249 --> 00:02:30,954
而Visual Novel按照显示方式来分有两种类型

72
00:02:31,054 --> 00:02:33,186
传统视觉小说 简写为NVL

73
00:02:33,286 --> 00:02:36,026
以及冒险游戏 简写为AVG或ADV

74
00:02:36,126 --> 00:02:39,159
NVL通常交互性较少而陈述的内容较多

75
00:02:39,259 --> 00:02:40,453
所以文字占满整个屏幕

76
00:02:40,553 --> 00:02:43,484
而AVG因为要留出屏幕中间的部分来进行交互

77
00:02:43,584 --> 00:02:44,995
所以文字被限制在了下方

78
00:02:45,702 --> 00:02:47,066
NVL我们已经会做了

79
00:02:47,166 --> 00:02:49,096
所以现在我们要来做一个AVG

80
00:02:49,196 --> 00:02:51,727
以后 我们大多数情况下也要做的是AVG

81
00:02:51,827 --> 00:02:53,557
毕竟大多数玩家都是要看图(mei)片(zi)的嘛

82
00:02:54,993 --> 00:02:56,860
新建一个游戏工程的步骤我就不说了

83
00:02:56,960 --> 00:02:59,292
注意0.txt的编码要选择GBK

84
00:02:59,392 --> 00:03:02,276
我的文本编辑器给它识别成了GB18030

85
00:03:02,376 --> 00:03:04,798
不过就像我刚刚说的 都差不多 不用管它

86
00:03:05,457 --> 00:03:07,960
按照惯例 这里拿鲁迅的文章来做例子

87
00:03:08,516 --> 00:03:10,825
而且我还在开始之前设定了一张背景

88
00:03:10,925 --> 00:03:13,288
这些都是我们在上一讲学过的

89
00:03:14,369 --> 00:03:15,974
当然我想大家都已经注意到了

90
00:03:16,730 --> 00:03:19,225
在文字出现的前一行有一个setwindow命令

91
00:03:19,992 --> 00:03:22,310
这个命令就是设定文字窗口大小的命令

92
00:03:22,580 --> 00:03:23,420
没有这条命令

93
00:03:23,520 --> 00:03:26,699
显示的就是跟上一讲一样的文字占据全屏的NVL

94
00:03:26,799 --> 00:03:29,026
我们来看一下加了这条命令以后的效果

95
00:03:31,893 --> 00:03:33,687
文字就在屏幕下方显示了

96
00:03:34,844 --> 00:03:38,117
setwindow是ONScripter中最臭名昭著的命令

97
00:03:38,217 --> 00:03:39,957
之所以这么说是因为参数太多了

98
00:03:40,057 --> 00:03:42,261
一般的命令也就两三个参数左右

99
00:03:42,361 --> 00:03:43,500
像之前我们学过的bg

100
00:03:43,600 --> 00:03:48,171
而这个至少有11个参数！

101
00:03:48,751 --> 00:03:49,617
哪怕是我也记不住

102
00:03:49,717 --> 00:03:51,230
每次用的时候都要看文档

103
00:03:51,330 --> 00:03:53,453
幸好通常情况下整篇游戏只会用到一次

104
00:03:53,972 --> 00:03:56,522
接下来我为大家一一讲解每个参数的意义

105
00:03:56,622 --> 00:03:58,239
大家要好好应用小学数学

106
00:03:58,554 --> 00:04:03,404
先是第一个文字左上角的横坐标

107
00:04:03,504 --> 00:04:06,499
在ONScripter里横坐标从左侧开始计算

108
00:04:06,599 --> 00:04:07,853
从左到右依次增加

109
00:04:07,953 --> 00:04:08,969
最右侧是640

110
00:04:09,069 --> 00:04:13,062
因为游戏默认的分辨率是640像素的宽度

111
00:04:13,162 --> 00:04:17,461
我想让它离屏幕左侧有20像素的间距

112
00:04:17,561 --> 00:04:19,452
那么我这里就写上20

113
00:04:20,953 --> 00:04:21,934
然后是纵坐标

114
00:04:22,558 --> 00:04:23,965
第一个文字的纵坐标

115
00:04:24,065 --> 00:04:26,132
同样的从顶端开始计算

116
00:04:26,687 --> 00:04:27,372
顶端是0

117
00:04:27,472 --> 00:04:29,452
从上到下逐渐增加

118
00:04:29,712 --> 00:04:31,023
底端就是480

119
00:04:31,123 --> 00:04:33,240
我想让文字框显示3行文字

120
00:04:33,340 --> 00:04:35,734
每行文字的高度是30像素

121
00:04:35,834 --> 00:04:37,780
30*3=90

122
00:04:37,880 --> 00:04:42,156
所以第一行文字要从480-90=390的位置开始

123
00:04:42,256 --> 00:04:43,756
不过这样最后一行文字的底部就会紧贴着屏幕底部

124
00:04:45,569 --> 00:04:45,988
太丑了

125
00:04:46,088 --> 00:04:47,297
所一一般都底下都要留个空

126
00:04:47,397 --> 00:04:48,876
我想让它空出20像素

127
00:04:48,976 --> 00:04:51,969
所以最后得出390-20=370

128
00:04:52,633 --> 00:04:54,309
然后是横向文字的个数

129
00:04:55,605 --> 00:04:56,689
如我之前所说

130
00:04:56,789 --> 00:04:59,586
我想让文字与屏幕左端相隔20像素

131
00:04:59,686 --> 00:05:01,837
右端也是隔出20像素

132
00:05:02,241 --> 00:05:05,433
640-20-20=600

133
00:05:05,607 --> 00:05:08,014
我又想让每个文字是30像素的宽度

134
00:05:08,114 --> 00:05:09,703
600/30=20

135
00:05:09,803 --> 00:05:11,887
以此得出每行显示20个字

136
00:05:11,987 --> 00:05:13,102
就写上20

137
00:05:13,401 --> 00:05:14,940
然后是纵向的文字个数

138
00:05:15,040 --> 00:05:15,713
就是行数

139
00:05:16,032 --> 00:05:16,695
我之前说过了

140
00:05:16,795 --> 00:05:17,262
是3

141
00:05:17,362 --> 00:05:19,028
（使文字框）最多显示3行文字

142
00:05:19,800 --> 00:05:21,767
然后是每个文字的宽度

143
00:05:21,867 --> 00:05:22,829
之前说过了是30

144
00:05:23,324 --> 00:05:24,299
然后是每个文字的高度

145
00:05:24,399 --> 00:05:25,836
我之前也说过了是30

146
00:05:25,895 --> 00:05:27,158
然后是横向字间距

147
00:05:27,258 --> 00:05:28,687
就是每个文字之间的距离

148
00:05:28,787 --> 00:05:30,331
我觉得我不需要 我就写了0

149
00:05:31,127 --> 00:05:32,248
行间距 我也写0

150
00:05:32,604 --> 00:05:34,651
然后是文字显示的速度

151
00:05:34,751 --> 00:05:35,966
就是显示一个字之后

152
00:05:36,066 --> 00:05:38,206
再显示下一个字的时间间隔

153
00:05:38,306 --> 00:05:38,844
以毫秒记

154
00:05:38,944 --> 00:05:40,054
我写20

155
00:05:40,154 --> 00:05:41,505
现在我把它改大一点

156
00:05:41,605 --> 00:05:43,653
比如说300毫秒

157
00:05:50,558 --> 00:05:52,360
太慢了还是把它改回来吧

158
00:06:02,549 --> 00:06:04,711
然后是决定文字是否是粗体的标记

159
00:06:04,811 --> 00:06:06,028
如果要粗体就写1

160
00:06:06,128 --> 00:06:07,564
我不喜欢粗体就写了0

161
00:06:07,664 --> 00:06:08,848
然后是是否有阴影

162
00:06:08,948 --> 00:06:11,064
要有就写1 不要就写0

163
00:06:11,164 --> 00:06:13,388
我觉得有阴影会好看一些 就写了1

164
00:06:13,959 --> 00:06:15,911
不过玩过Galgame的人都知道这样还是太丑了

165
00:06:16,011 --> 00:06:17,517
总得有个半透明的框框吧

166
00:06:17,617 --> 00:06:19,858
所以我们就得给文字加个半透明的框框

167
00:06:19,958 --> 00:06:20,545
有两种方法

168
00:06:20,645 --> 00:06:21,638
一种是图片的文字框

169
00:06:21,738 --> 00:06:23,161
我事先自己画了一张

170
00:06:24,676 --> 00:06:25,930
已经上传到资源里了

171
00:06:26,030 --> 00:06:28,170
你可以自己画或者自己找一张合适的

172
00:06:28,270 --> 00:06:30,822
然后放在游戏目录下或者游戏目录中的目录下

173
00:06:31,309 --> 00:06:32,822
然后增加一个参数

174
00:06:33,508 --> 00:06:35,809
图片的文件名或者路径名

175
00:06:39,489 --> 00:06:41,660
然后是图片显示时左上角的坐标

176
00:06:41,742 --> 00:06:44,933
先是横坐标 20-10=10

177
00:06:45,033 --> 00:06:48,665
然后是纵坐标，370-10=360

178
00:06:52,104 --> 00:06:53,039
看一下效果

179
00:06:55,416 --> 00:06:57,581
这张文字框图片原本应该是半透明的

180
00:06:57,681 --> 00:06:58,610
可是现在却是实心的

181
00:06:58,710 --> 00:06:59,361
该怎么办呢？

182
00:07:00,041 --> 00:07:06,434
在引号之内 路径名的前方 加上半角的冒号
（非常抱歉又说错了）

183
00:07:06,534 --> 00:07:07,464
小写字母a

184
00:07:07,564 --> 00:07:08,569
半角的分号

185
00:07:08,669 --> 00:07:10,320
然后这样就可以了

186
00:07:13,153 --> 00:07:14,731
至于这个原因是为什呢

187
00:07:14,831 --> 00:07:16,131
就是比较后面的知识了

188
00:07:16,231 --> 00:07:17,506
容我这里买个关子

189
00:07:18,423 --> 00:07:19,784
那么这一讲到这里就结束了

190
00:07:19,884 --> 00:07:23,939
虽然我花了这么长时间只讲了文字编码和文字框这两个知识点

191
00:07:24,039 --> 00:07:26,764
不过这两个知识点都是ONScripter中最难的基础知识

192
00:07:26,864 --> 00:07:27,679
过了这个瓶颈

193
00:07:27,779 --> 00:07:29,242
接下来就是灿烂的星光大道了

194
00:07:29,342 --> 00:07:29,973
如果你有疑问

195
00:07:30,073 --> 00:07:31,138
给我发邮件也是可以的

196
00:07:31,238 --> 00:07:32,923
我的邮箱地址在个人介绍那里

197
00:07:33,023 --> 00:07:35,201
如果你觉得我做得好就投个硬币吧

198
00:07:35,301 --> 00:07:37,617
做的不好你也可以发邮件提出你的意见

199
00:07:37,717 --> 00:07:38,878
感谢大家的支持

200
00:07:38,978 --> 00:07:40,478


