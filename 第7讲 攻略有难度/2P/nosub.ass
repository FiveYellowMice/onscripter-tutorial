[Script Info]
; Script generated by FFmpeg/Lavc56.41.100
ScriptType: v4.00+
PlayResX: 384
PlayResY: 288

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,Arial,16,&Hffffff,&Hffffff,&H0,&H0,0,0,0,0,100,100,0,0,1,1,0,2,10,10,10,0

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.26,0:00:01.61,Default,,0,0,0,,那么这里就是大家期待已久的2P了
Dialogue: 0,0:00:01.71,0:00:02.62,Default,,0,0,0,,有了1P的铺垫
Dialogue: 0,0:00:02.72,0:00:03.60,Default,,0,0,0,,我就不说一堆废话了
Dialogue: 0,0:00:03.70,0:00:04.37,Default,,0,0,0,,直入主题
Dialogue: 0,0:00:04.47,0:00:06.28,Default,,0,0,0,,为我们的游戏真正的加上较复杂分支
Dialogue: 0,0:00:06.77,0:00:08.39,Default,,0,0,0,,为了防止剧透这个示例游戏的剧情
Dialogue: 0,0:00:08.49,0:00:09.80,Default,,0,0,0,,我先给大家看一下成品好了
Dialogue: 0,0:00:14.25,0:00:16.73,Default,,0,0,0,,如果在这里选择以后再问的话\N就会直接到达Bad End
Dialogue: 0,0:00:16.83,0:00:18.69,Default,,0,0,0,,这是上一讲的内容 我就不重复展示了
Dialogue: 0,0:00:18.79,0:00:20.39,Default,,0,0,0,,所以我在这里选择立即去问她
Dialogue: 0,0:00:29.76,0:00:30.82,Default,,0,0,0,,现在这里又会有个选项
Dialogue: 0,0:00:30.92,0:00:32.48,Default,,0,0,0,,按照惯例我们要先存一下档
Dialogue: 0,0:00:34.76,0:00:36.97,Default,,0,0,0,,然后我们选择“是有很多图片的故事”
Dialogue: 0,0:01:14.06,0:01:15.80,Default,,0,0,0,,接下来我们回到刚刚存档的地方
Dialogue: 0,0:01:18.76,0:01:19.71,Default,,0,0,0,,选第二个选项
Dialogue: 0,0:01:52.34,0:01:53.24,Default,,0,0,0,,那这个游戏就是这样
Dialogue: 0,0:01:53.34,0:01:55.70,Default,,0,0,0,,毕竟只是一个示例\N大家也不要指望有什么剧情
Dialogue: 0,0:01:55.80,0:01:57.28,Default,,0,0,0,,另外这个故事也不是我写的
Dialogue: 0,0:01:57.38,0:01:58.58,Default,,0,0,0,,所以各位也请别打我
Dialogue: 0,0:01:58.84,0:02:01.23,Default,,0,0,0,,那么我们来画一下这个游戏的完整的分支图吧
Dialogue: 0,0:02:01.33,0:02:03.71,Default,,0,0,0,,先是立即去问和以后去问的树形分支
Dialogue: 0,0:02:03.81,0:02:05.70,Default,,0,0,0,,选择以后再问的话就会到达Bad Ending
Dialogue: 0,0:02:05.80,0:02:09.73,Default,,0,0,0,,在立即去问之后又会有\N“有很多图片的故事”和\N“HENTAI的游戏”两个选项
Dialogue: 0,0:02:09.83,0:02:11.21,Default,,0,0,0,,这样分成了两个分支
Dialogue: 0,0:02:11.31,0:02:13.03,Default,,0,0,0,,不过在分出去一段时间之后就合并回来了
Dialogue: 0,0:02:13.13,0:02:14.82,Default,,0,0,0,,所以这是一个并联分支
Dialogue: 0,0:02:15.30,0:02:17.37,Default,,0,0,0,,第二个并联分支可能不是很明显
Dialogue: 0,0:02:17.47,0:02:20.85,Default,,0,0,0,,就相差了一句话“除了她想要做的那些搞比利的游戏”
Dialogue: 0,0:02:20.95,0:02:22.96,Default,,0,0,0,,没注意到的朋友可以把进度条拖回去看看
Dialogue: 0,0:02:23.06,0:02:23.98,Default,,0,0,0,,我就不重复展示了
Dialogue: 0,0:02:24.08,0:02:27.66,Default,,0,0,0,,这句话只有在玩家在上面选择了\N“HENTAI的游戏”的时候才会出现
Dialogue: 0,0:02:27.76,0:02:29.82,Default,,0,0,0,,如果选择了“有很多图片的故事”则没有
Dialogue: 0,0:02:29.92,0:02:31.26,Default,,0,0,0,,最后，不管你选的哪个
Dialogue: 0,0:02:31.36,0:02:32.18,Default,,0,0,0,,都会进入Good Ending
Dialogue: 0,0:02:32.28,0:02:34.96,Default,,0,0,0,,也就是说只有第一次选项分支会决定结局
Dialogue: 0,0:02:35.06,0:02:36.32,Default,,0,0,0,,第二次则不会影响到结局
Dialogue: 0,0:02:36.42,0:02:38.62,Default,,0,0,0,,那么这张流程图画好了 我们就开工吧！
Dialogue: 0,0:02:38.72,0:02:40.63,Default,,0,0,0,,首先先从素材里拿出图片和音乐
Dialogue: 0,0:02:40.73,0:02:41.61,Default,,0,0,0,,还有0.txt
Dialogue: 0,0:02:41.71,0:02:43.38,Default,,0,0,0,,这个脚本就是我们在上一讲的成果
Dialogue: 0,0:02:43.80,0:02:44.92,Default,,0,0,0,,然后还有主程序和字体
Dialogue: 0,0:02:45.77,0:02:46.79,Default,,0,0,0,,打开0.txt
Dialogue: 0,0:02:47.26,0:02:48.94,Default,,0,0,0,,找到未完待续的地方
Dialogue: 0,0:02:48.94,0:02:50.06,Default,,0,0,0,,把这两行删掉
Dialogue: 0,0:02:51.02,0:02:51.76,Default,,0,0,0,,跟上一讲一样
Dialogue: 0,0:02:51.76,0:02:53.50,Default,,0,0,0,,我们用select命令来做出选项分支
Dialogue: 0,0:02:53.60,0:02:54.60,Default,,0,0,0,,select
Dialogue: 0,0:02:58.84,0:03:07.58,Default,,0,0,0,,有很多图片的故事
Dialogue: 0,0:03:09.85,0:03:11.31,Default,,0,0,0,,标签我这里就叫vn好了
Dialogue: 0,0:03:14.59,0:03:20.91,Default,,0,0,0,,是HENTAI的游戏
Dialogue: 0,0:03:23.14,0:03:24.94,Default,,0,0,0,,我们就把这个标签叫做hentai
Dialogue: 0,0:03:27.64,0:03:30.19,Default,,0,0,0,,然后我们就开始写\N“是有很多图片的故事”这个分支的内容
Dialogue: 0,0:03:30.29,0:03:32.28,Default,,0,0,0,,也就是*vn这个标签之后的内容
Dialogue: 0,0:03:48.72,0:03:50.05,Default,,0,0,0,,这样我们的Good Ending就写完了
Dialogue: 0,0:03:50.15,0:03:51.87,Default,,0,0,0,,但是别忘了我们还有一个hentai的分支
Dialogue: 0,0:03:51.97,0:03:54.12,Default,,0,0,0,,许多人可能会认为直接在这后面写就可以了
Dialogue: 0,0:03:54.22,0:03:55.34,Default,,0,0,0,,不过这是一个并联分支
Dialogue: 0,0:03:55.34,0:03:57.74,Default,,0,0,0,,如果直接在后面写就免不了会有大量的重复
Dialogue: 0,0:03:57.74,0:03:58.90,Default,,0,0,0,,虽然可以复制粘帖
Dialogue: 0,0:03:59.00,0:04:01.09,Default,,0,0,0,,但是这样会使脚本的结构变得混乱且难以管理
Dialogue: 0,0:04:01.19,0:04:04.09,Default,,0,0,0,,比如如果我要修改一部分重复的剧情中的文字
Dialogue: 0,0:04:04.19,0:04:05.86,Default,,0,0,0,,就得把每个地方都重新修改一遍
Dialogue: 0,0:04:05.96,0:04:07.62,Default,,0,0,0,,也很容易不小心漏掉某个地方
Dialogue: 0,0:04:07.72,0:04:10.46,Default,,0,0,0,,那么要怎样才能避免重复写同一段文字呢？
Dialogue: 0,0:04:10.56,0:04:11.81,Default,,0,0,0,,从流程图里我们就可以看的很明白
Dialogue: 0,0:04:11.91,0:04:12.54,Default,,0,0,0,,在某个地方
Dialogue: 0,0:04:12.64,0:04:13.92,Default,,0,0,0,,这两个分支要合并到一起
Dialogue: 0,0:04:14.02,0:04:15.47,Default,,0,0,0,,也就是要共用同一段文本
Dialogue: 0,0:04:15.57,0:04:17.77,Default,,0,0,0,,那么我们在脚本里面找一下这两条分支合并的地方
Dialogue: 0,0:04:18.20,0:04:19.96,Default,,0,0,0,,也就是“几年后”这句话之前
Dialogue: 0,0:04:20.44,0:04:22.32,Default,,0,0,0,,我么么在它前面加上一个marry标签
Dialogue: 0,0:04:24.41,0:04:27.00,Default,,0,0,0,,那么我们就可以让它在hentai分支的内容结束之后
Dialogue: 0,0:04:27.10,0:04:28.64,Default,,0,0,0,,跳转到marry标签
Dialogue: 0,0:04:28.74,0:04:33.40,Default,,0,0,0,,然后我们就可以在Good Ending这句话之后\N写hentai标签及其之后的内容了
Dialogue: 0,0:04:33.50,0:04:34.90,Default,,0,0,0,,不过我是个强迫症患者
Dialogue: 0,0:04:35.00,0:04:37.11,Default,,0,0,0,,一定要把两段并联分支放在一起
Dialogue: 0,0:04:37.21,0:04:41.98,Default,,0,0,0,,也就是把hentai分支要放在\N“有很多图片的故事”分支\N以及marry标签的中间
Dialogue: 0,0:04:42.68,0:04:47.81,Default,,0,0,0,,但是这样的话在\N“你不会让我失望的，你知道的”之后\N就会跑到hentai分支去了
Dialogue: 0,0:04:48.49,0:04:49.79,Default,,0,0,0,,为了避免这种荒唐的事情
Dialogue: 0,0:04:49.89,0:04:53.35,Default,,0,0,0,,我们要在“你不会让我失望的，你知道的”\N这句话之后加上一条命令
Dialogue: 0,0:04:53.45,0:04:55.23,Default,,0,0,0,,让ONScripter直接跳转到marry标签
Dialogue: 0,0:04:55.77,0:04:57.29,Default,,0,0,0,,这条命令就是goto
Dialogue: 0,0:04:58.32,0:04:59.85,Default,,0,0,0,,跟英语里面的go to一个意思
Dialogue: 0,0:04:59.85,0:05:00.86,Default,,0,0,0,,但中间没有空格
Dialogue: 0,0:05:01.15,0:05:04.16,Default,,0,0,0,,我们就写上goto *marry
Dialogue: 0,0:05:04.26,0:05:07.74,Default,,0,0,0,,这样，不论在这条goto命令和marry标签之间发生什么
Dialogue: 0,0:05:07.84,0:05:10.37,Default,,0,0,0,,都不会影响到“有很多图片的故事”分支里面的内容
Dialogue: 0,0:05:10.65,0:05:12.39,Default,,0,0,0,,接下来我们写hentai分支的内容
Dialogue: 0,0:05:17.02,0:05:19.02,Default,,0,0,0,,在“我不是这个意思啊”之后还会继续往下执行
Dialogue: 0,0:05:19.02,0:05:20.33,Default,,0,0,0,,执行marry标签之后的内容
Dialogue: 0,0:05:20.43,0:05:22.18,Default,,0,0,0,,但是我是一个不可救药强迫症患者
Dialogue: 0,0:05:22.28,0:05:25.91,Default,,0,0,0,,一定要在所有并联分支之后\N都写上goto命令来合并到主分支
Dialogue: 0,0:05:26.01,0:05:30.15,Default,,0,0,0,,所以我还是写上这条没什么用处的 goto *marry
Dialogue: 0,0:05:31.23,0:05:33.23,Default,,0,0,0,,这样 我们的第一个并联分支就完成了
Dialogue: 0,0:05:33.33,0:05:34.68,Default,,0,0,0,,再看一下之前画的流程图
Dialogue: 0,0:05:34.78,0:05:36.77,Default,,0,0,0,,我们还需要做第二个并联分支
Dialogue: 0,0:05:37.21,0:05:38.07,Default,,0,0,0,,这个并联分支呢
Dialogue: 0,0:05:38.17,0:05:43.84,Default,,0,0,0,,是在“我们做了许多游戏并感到十分快乐”\N之后多出了一句话
Dialogue: 0,0:05:43.94,0:05:46.90,Default,,0,0,0,,我们要让ONScripter判断你是否经历过hentai分支
Dialogue: 0,0:05:47.00,0:05:49.28,Default,,0,0,0,,以此来决定是否进入这个分支
Dialogue: 0,0:05:49.71,0:05:50.88,Default,,0,0,0,,这具体需要怎么做呢？
Dialogue: 0,0:05:50.98,0:05:54.30,Default,,0,0,0,,ONScripter没有直接的功能\N让它判定玩家是否经历过某个分支
Dialogue: 0,0:05:54.40,0:05:57.21,Default,,0,0,0,,但是我们可以通过自己设定变量来实现这个功能
Dialogue: 0,0:05:57.31,0:05:59.82,Default,,0,0,0,,所谓变量就是电脑在内存中所存储的一个值
Dialogue: 0,0:05:59.92,0:06:02.84,Default,,0,0,0,,这个值可以是数字、字符串（文本）\N或者是什么别的东西
Dialogue: 0,0:06:02.94,0:06:06.20,Default,,0,0,0,,我们可以给变量赋值\N也可以引用之前存储在变量里面的值
Dialogue: 0,0:06:06.30,0:06:07.95,Default,,0,0,0,,好感度就是变量的一种用途
Dialogue: 0,0:06:08.05,0:06:09.36,Default,,0,0,0,,变量通常都有一个名称
Dialogue: 0,0:06:09.46,0:06:10.34,Default,,0,0,0,,在ONScripter里面
Dialogue: 0,0:06:10.34,0:06:12.46,Default,,0,0,0,,变量有数字变量和字符串变量两种
Dialogue: 0,0:06:12.56,0:06:14.26,Default,,0,0,0,,这里我们只会用到数字变量
Dialogue: 0,0:06:14.36,0:06:16.07,Default,,0,0,0,,变量的名称只能是数字
Dialogue: 0,0:06:16.17,0:06:19.98,Default,,0,0,0,,可以是0至4095之间的任何一个数字 包括两端
Dialogue: 0,0:06:20.25,0:06:22.81,Default,,0,0,0,,0号变量我们通常会被留作别的用途
Dialogue: 0,0:06:22.91,0:06:26.72,Default,,0,0,0,,所以在这里我们就拿1号变量\N来存储玩家是否经过hentai分支的记录
Dialogue: 0,0:06:26.82,0:06:29.33,Default,,0,0,0,,变量的值为0就表示没有经过hentai分支
Dialogue: 0,0:06:29.43,0:06:30.34,Default,,0,0,0,,1就表示经过了
Dialogue: 0,0:06:30.93,0:06:32.22,Default,,0,0,0,,变量不需要事先定义
Dialogue: 0,0:06:32.32,0:06:33.72,Default,,0,0,0,,这点跟许多编程语言不一样
Dialogue: 0,0:06:33.82,0:06:35.55,Default,,0,0,0,,但是我们要事先给变量赋值
Dialogue: 0,0:06:35.65,0:06:37.73,Default,,0,0,0,,那么因为0表示没有经过hentai分支
Dialogue: 0,0:06:37.83,0:06:40.41,Default,,0,0,0,,所以我们就在游戏开始的地方给这个变量赋值为0
Dialogue: 0,0:06:40.51,0:06:42.86,Default,,0,0,0,,给变量赋值的命令叫做mov
Dialogue: 0,0:06:42.96,0:06:44.78,Default,,0,0,0,,就是英语move的前三个字母
Dialogue: 0,0:06:44.88,0:06:45.97,Default,,0,0,0,,不是movie的意思啊
Dialogue: 0,0:06:46.25,0:06:47.60,Default,,0,0,0,,这条命令有两个参数
Dialogue: 0,0:06:47.70,0:06:48.91,Default,,0,0,0,,第一个是变量的名称
Dialogue: 0,0:06:49.01,0:06:51.13,Default,,0,0,0,,我在这里写上%1
Dialogue: 0,0:06:51.23,0:06:53.54,Default,,0,0,0,,百分号就表示是一个数字变量
Dialogue: 0,0:06:53.64,0:06:55.15,Default,,0,0,0,,1表示是一号变量
Dialogue: 0,0:06:55.74,0:06:57.98,Default,,0,0,0,,第二个参数是要给变量赋的值
Dialogue: 0,0:06:58.08,0:06:59.63,Default,,0,0,0,,之前说过了 是0
Dialogue: 0,0:06:59.73,0:07:00.61,Default,,0,0,0,,那么这样一来
Dialogue: 0,0:07:00.61,0:07:01.52,Default,,0,0,0,,在游戏开始的时候
Dialogue: 0,0:07:01.62,0:07:04.29,Default,,0,0,0,,ONScripter就会在电脑的内存里\N保存一个叫做“1号变量”的数字
Dialogue: 0,0:07:04.39,0:07:05.13,Default,,0,0,0,,值为0
Dialogue: 0,0:07:05.23,0:07:07.21,Default,,0,0,0,,接下来我们到hentai分支开始的地方
Dialogue: 0,0:07:08.38,0:07:09.73,Default,,0,0,0,,也写上一条mov命令
Dialogue: 0,0:07:10.33,0:07:11.55,Default,,0,0,0,,把这个变量的值变成1
Dialogue: 0,0:07:12.21,0:07:15.65,Default,,0,0,0,,mov %1,1
Dialogue: 0,0:07:15.89,0:07:17.77,Default,,0,0,0,,这样在玩家进入了hentai分支的时候
Dialogue: 0,0:07:17.77,0:07:19.01,Default,,0,0,0,,1号变量的值就变成了1
Dialogue: 0,0:07:19.11,0:07:20.90,Default,,0,0,0,,而这一切 玩家都是浑然不知的
Dialogue: 0,0:07:21.00,0:07:23.01,Default,,0,0,0,,那么我们现在就可以在分支开始的地方
Dialogue: 0,0:07:23.11,0:07:26.04,Default,,0,0,0,,也就是“我们做了许多游戏并感到十分快乐”\N这句话的后面
Dialogue: 0,0:07:26.14,0:07:27.07,Default,,0,0,0,,加上一条命令
Dialogue: 0,0:07:27.17,0:07:28.51,Default,,0,0,0,,让它判断1号变量的值
Dialogue: 0,0:07:28.87,0:07:32.95,Default,,0,0,0,,并在其值为1的时候让它显示\N“除了她想要做的那些搞比利的游戏”这句话
Dialogue: 0,0:07:33.05,0:07:34.54,Default,,0,0,0,,那么我们就要使用if命令
Dialogue: 0,0:07:34.54,0:07:35.54,Default,,0,0,0,,先写上if
Dialogue: 0,0:07:36.31,0:07:37.65,Default,,0,0,0,,空格 再写上判断的条件
Dialogue: 0,0:07:37.75,0:07:40.00,Default,,0,0,0,,在这里就是1号变量等于1
Dialogue: 0,0:07:42.12,0:07:43.49,Default,,0,0,0,,虽然写一个等号也可以
Dialogue: 0,0:07:43.59,0:07:44.44,Default,,0,0,0,,但这不是一个好习惯
Dialogue: 0,0:07:44.54,0:07:45.60,Default,,0,0,0,,然后再空格
Dialogue: 0,0:07:45.70,0:07:47.34,Default,,0,0,0,,注意是空格而不是半角逗号
Dialogue: 0,0:07:47.64,0:07:48.49,Default,,0,0,0,,然后再写上一条命令
Dialogue: 0,0:07:49.17,0:07:50.60,Default,,0,0,0,,如果之前的判段结果为真
Dialogue: 0,0:07:50.70,0:07:52.31,Default,,0,0,0,,就是说之前的式子是成立的
Dialogue: 0,0:07:52.75,0:07:53.67,Default,,0,0,0,,就会执行后面的命令
Dialogue: 0,0:07:53.77,0:07:54.81,Default,,0,0,0,,否则什么事也不会发生
Dialogue: 0,0:07:55.31,0:07:57.26,Default,,0,0,0,,if的判断条件除了等于（==）以外
Dialogue: 0,0:07:57.36,0:07:58.91,Default,,0,0,0,,还可以是大于（>），小于（<）
Dialogue: 0,0:07:59.01,0:08:00.36,Default,,0,0,0,,大于等于（>=），小于等于（<=）
Dialogue: 0,0:08:00.46,0:08:01.01,Default,,0,0,0,,不等于（!=）
Dialogue: 0,0:08:01.11,0:08:02.70,Default,,0,0,0,,此外还有一个notif命令
Dialogue: 0,0:08:02.80,0:08:03.63,Default,,0,0,0,,跟if的用法一样
Dialogue: 0,0:08:03.73,0:08:04.36,Default,,0,0,0,,但是顾名思义
Dialogue: 0,0:08:04.46,0:08:06.96,Default,,0,0,0,,notif命令只有在判断结果为假
Dialogue: 0,0:08:07.06,0:08:08.68,Default,,0,0,0,,也就是式子不成立的情况下
Dialogue: 0,0:08:08.78,0:08:09.66,Default,,0,0,0,,才会执行后面的命令
Dialogue: 0,0:08:09.97,0:08:11.37,Default,,0,0,0,,不过我们在这里还用不到这些
Dialogue: 0,0:08:11.66,0:08:13.08,Default,,0,0,0,,那么在1号变量为1的时候
Dialogue: 0,0:08:13.18,0:08:13.82,Default,,0,0,0,,要发生什么呢？
Dialogue: 0,0:08:13.92,0:08:15.72,Default,,0,0,0,,当然就是进入第二次并联分支了
Dialogue: 0,0:08:16.05,0:08:17.49,Default,,0,0,0,,但是这次跟上次不一样了
Dialogue: 0,0:08:17.59,0:08:19.73,Default,,0,0,0,,只是比另一条分支多一句话
Dialogue: 0,0:08:20.09,0:08:22.18,Default,,0,0,0,,所以我也不用再为两个分支加标签
Dialogue: 0,0:08:22.71,0:08:24.35,Default,,0,0,0,,这里使用gosub命令
Dialogue: 0,0:08:24.45,0:08:27.43,Default,,0,0,0,,gosub命令的参数跟goto是差不多的
Dialogue: 0,0:08:27.53,0:08:28.90,Default,,0,0,0,,是要跳转到的标签的名字
Dialogue: 0,0:08:29.00,0:08:30.54,Default,,0,0,0,,我就把它叫做bl好了
Dialogue: 0,0:08:32.22,0:08:33.52,Default,,0,0,0,,gosub跟goto的区别在于
Dialogue: 0,0:08:33.87,0:08:36.72,Default,,0,0,0,,goto在执行之后就是直接跳到目标标签的位置去了
Dialogue: 0,0:08:36.82,0:08:38.64,Default,,0,0,0,,而gosub在跳过去之后
Dialogue: 0,0:08:38.74,0:08:40.71,Default,,0,0,0,,会记住你在跳之前的位置
Dialogue: 0,0:08:40.81,0:08:42.10,Default,,0,0,0,,在碰到了return命令的时候
Dialogue: 0,0:08:42.20,0:08:45.85,Default,,0,0,0,,就会回到原本gosub的地方\N然后继续执行gosub之后的语句
Dialogue: 0,0:08:45.95,0:08:49.26,Default,,0,0,0,,那么我们现在在后面比较清净的位置加上bl标签
Dialogue: 0,0:08:50.07,0:08:52.09,Default,,0,0,0,,然后写上分支里的内容 只有一句话
Dialogue: 0,0:08:52.46,0:08:53.67,Default,,0,0,0,,你也可以写好几句话
Dialogue: 0,0:08:53.77,0:08:55.16,Default,,0,0,0,,不过不管你写多少
Dialogue: 0,0:08:55.26,0:08:56.79,Default,,0,0,0,,后面都要写上return命令
Dialogue: 0,0:08:56.89,0:08:58.95,Default,,0,0,0,,这样就如我刚刚说的
Dialogue: 0,0:08:59.05,0:09:00.88,Default,,0,0,0,,会回到原本gosub的位置
Dialogue: 0,0:09:00.98,0:09:02.74,Default,,0,0,0,,记住 gosub命令不能乱用
Dialogue: 0,0:09:02.84,0:09:04.43,Default,,0,0,0,,用完了之后一定要return
Dialogue: 0,0:09:04.53,0:09:05.62,Default,,0,0,0,,否则就要用goto
Dialogue: 0,0:09:06.17,0:09:08.05,Default,,0,0,0,,好了 那完成之后呢
Dialogue: 0,0:09:08.15,0:09:09.31,Default,,0,0,0,,在1号变量等于1的时候
Dialogue: 0,0:09:09.41,0:09:10.91,Default,,0,0,0,,就会gosub到bl标签
Dialogue: 0,0:09:11.01,0:09:12.04,Default,,0,0,0,,执行这一句话
Dialogue: 0,0:09:12.14,0:09:13.02,Default,,0,0,0,,然后再跳回去
Dialogue: 0,0:09:13.12,0:09:15.21,Default,,0,0,0,,然后一路通向Good Ending
Dialogue: 0,0:09:15.83,0:09:16.98,Default,,0,0,0,,现在我们看一下流程图
Dialogue: 0,0:09:17.08,0:09:19.48,Default,,0,0,0,,在游戏开始的时候1号变量的值是0
Dialogue: 0,0:09:19.58,0:09:20.94,Default,,0,0,0,,如果我选择了“HENTAI的游戏”
Dialogue: 0,0:09:21.04,0:09:21.86,Default,,0,0,0,,就变成了1
Dialogue: 0,0:09:22.34,0:09:24.01,Default,,0,0,0,,那么到这里的时候就会显示这句话
Dialogue: 0,0:09:24.11,0:09:26.57,Default,,0,0,0,,如果我选择的是“有很多图片的故事”
Dialogue: 0,0:09:26.94,0:09:28.07,Default,,0,0,0,,那么就会走这边
Dialogue: 0,0:09:28.17,0:09:29.03,Default,,0,0,0,,而不会显示这句话
Dialogue: 0,0:09:29.72,0:09:31.36,Default,,0,0,0,,那么现在有些人可能也会问了
Dialogue: 0,0:09:31.46,0:09:33.16,Default,,0,0,0,,变量的名称只能是数字吗？
Dialogue: 0,0:09:33.26,0:09:34.19,Default,,0,0,0,,如果我变量多了
Dialogue: 0,0:09:34.29,0:09:36.73,Default,,0,0,0,,只用数字的话肯定会很难记住而降低效率
Dialogue: 0,0:09:36.83,0:09:37.76,Default,,0,0,0,,那该怎么办呢？
Dialogue: 0,0:09:37.86,0:09:39.07,Default,,0,0,0,,我们可以在define区
Dialogue: 0,0:09:39.17,0:09:40.09,Default,,0,0,0,,给变量取一个名字
Dialogue: 0,0:09:40.57,0:09:42.40,Default,,0,0,0,,我们要用到numalias这个命令
Dialogue: 0,0:09:44.75,0:09:45.89,Default,,0,0,0,,num就是number的意思
Dialogue: 0,0:09:45.99,0:09:46.81,Default,,0,0,0,,alias就是别名
Dialogue: 0,0:09:46.91,0:09:47.78,Default,,0,0,0,,它有两个参数
Dialogue: 0,0:09:47.88,0:09:50.72,Default,,0,0,0,,第一个参数是变量的新名字
Dialogue: 0,0:09:51.23,0:09:53.22,Default,,0,0,0,,这个名字只能是半角字母或数字
Dialogue: 0,0:09:53.32,0:09:54.35,Default,,0,0,0,,中间不能有空格
Dialogue: 0,0:09:54.45,0:09:56.73,Default,,0,0,0,,我就给它取名叫bl_game好了
Dialogue: 0,0:09:58.18,0:09:58.92,Default,,0,0,0,,半角逗号
Dialogue: 0,0:09:59.42,0:10:00.98,Default,,0,0,0,,第二个参数是变量的编号
Dialogue: 0,0:10:01.08,0:10:02.07,Default,,0,0,0,,在这里就是1
Dialogue: 0,0:10:02.17,0:10:04.66,Default,,0,0,0,,注意在取名的时候不要写上百分号
Dialogue: 0,0:10:04.76,0:10:05.97,Default,,0,0,0,,取名取好了之后呢
Dialogue: 0,0:10:06.07,0:10:09.01,Default,,0,0,0,,我们就可以把下面的%1全都改成%bl_game了
Dialogue: 0,0:10:10.24,0:10:10.79,Default,,0,0,0,,这样一来
Dialogue: 0,0:10:10.89,0:10:13.39,Default,,0,0,0,,我们就可以以bl_game的名字来记住这个变量
Dialogue: 0,0:10:13.49,0:10:14.89,Default,,0,0,0,,而不是生硬的数字了
Dialogue: 0,0:10:14.99,0:10:18.11,Default,,0,0,0,,如果你有2, 3, 4或者更多的变量也是同理
Dialogue: 0,0:10:18.21,0:10:19.93,Default,,0,0,0,,好了 这样我们这一讲的内容就完成了
Dialogue: 0,0:10:20.03,0:10:21.56,Default,,0,0,0,,想看一看每一讲的进步的话
Dialogue: 0,0:10:21.66,0:10:26.93,Default,,0,0,0,,我们可以使用diff工具来对比一下素材里原本的0.txt\N和这一讲修改以后的0.txt
Dialogue: 0,0:10:27.03,0:10:28.08,Default,,0,0,0,,有时间我去介绍一下
Dialogue: 0,0:10:28.94,0:10:31.45,Default,,0,0,0,,那么所有的素材都已经上传到视频介绍中的链接里了
Dialogue: 0,0:10:31.55,0:10:34.13,Default,,0,0,0,,在完成之后你也可以\N按照自己的想法来设计自己的游戏流程
Dialogue: 0,0:10:34.77,0:10:36.73,Default,,0,0,0,,最后向往常一样感谢大家的支持
Dialogue: 0,0:10:36.83,0:10:38.92,Default,,0,0,0,,喜欢我的视频就给个硬币并推荐给朋友吧
Dialogue: 0,0:10:39.02,0:10:42.06,Default,,0,0,0,,觉得我的视频做的不够好\N也可以向我发邮件提出你的意见或建议
Dialogue: 0,0:10:42.40,0:10:44.03,Default,,0,0,0,,下一讲是精灵 那么我们下期再见！
