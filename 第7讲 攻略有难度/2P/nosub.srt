1
00:00:00,262 --> 00:00:01,613
那么这里就是大家期待已久的2P了

2
00:00:01,713 --> 00:00:02,622
有了1P的铺垫

3
00:00:02,722 --> 00:00:03,601
我就不说一堆废话了

4
00:00:03,701 --> 00:00:04,373
直入主题

5
00:00:04,473 --> 00:00:06,277
为我们的游戏真正的加上较复杂分支

6
00:00:06,768 --> 00:00:08,393
为了防止剧透这个示例游戏的剧情

7
00:00:08,493 --> 00:00:09,795
我先给大家看一下成品好了

8
00:00:14,249 --> 00:00:16,732
如果在这里选择以后再问的话
就会直接到达Bad End

9
00:00:16,832 --> 00:00:18,690
这是上一讲的内容 我就不重复展示了

10
00:00:18,790 --> 00:00:20,389
所以我在这里选择立即去问她

11
00:00:29,759 --> 00:00:30,819
现在这里又会有个选项

12
00:00:30,919 --> 00:00:32,477
按照惯例我们要先存一下档

13
00:00:34,764 --> 00:00:36,973
然后我们选择“是有很多图片的故事”

14
00:01:14,061 --> 00:01:15,798
接下来我们回到刚刚存档的地方

15
00:01:18,761 --> 00:01:19,713
选第二个选项

16
00:01:52,339 --> 00:01:53,244
那这个游戏就是这样

17
00:01:53,344 --> 00:01:55,704
毕竟只是一个示例
大家也不要指望有什么剧情

18
00:01:55,804 --> 00:01:57,278
另外这个故事也不是我写的

19
00:01:57,378 --> 00:01:58,577
所以各位也请别打我

20
00:01:58,837 --> 00:02:01,228
那么我们来画一下这个游戏的完整的分支图吧

21
00:02:01,328 --> 00:02:03,711
先是立即去问和以后去问的树形分支

22
00:02:03,811 --> 00:02:05,700
选择以后再问的话就会到达Bad Ending

23
00:02:05,800 --> 00:02:09,728
在立即去问之后又会有
“有很多图片的故事”和
“HENTAI的游戏”两个选项

24
00:02:09,828 --> 00:02:11,209
这样分成了两个分支

25
00:02:11,309 --> 00:02:13,026
不过在分出去一段时间之后就合并回来了

26
00:02:13,126 --> 00:02:14,818
所以这是一个并联分支

27
00:02:15,303 --> 00:02:17,371
第二个并联分支可能不是很明显

28
00:02:17,471 --> 00:02:20,848
就相差了一句话“除了她想要做的那些搞比利的游戏”

29
00:02:20,948 --> 00:02:22,955
没注意到的朋友可以把进度条拖回去看看

30
00:02:23,055 --> 00:02:23,975
我就不重复展示了

31
00:02:24,075 --> 00:02:27,664
这句话只有在玩家在上面选择了
“HENTAI的游戏”的时候才会出现

32
00:02:27,764 --> 00:02:29,822
如果选择了“有很多图片的故事”则没有

33
00:02:29,922 --> 00:02:31,262
最后，不管你选的哪个

34
00:02:31,362 --> 00:02:32,179
都会进入Good Ending

35
00:02:32,279 --> 00:02:34,955
也就是说只有第一次选项分支会决定结局

36
00:02:35,055 --> 00:02:36,320
第二次则不会影响到结局

37
00:02:36,420 --> 00:02:38,622
那么这张流程图画好了 我们就开工吧！

38
00:02:38,722 --> 00:02:40,633
首先先从素材里拿出图片和音乐

39
00:02:40,733 --> 00:02:41,610
还有0.txt

40
00:02:41,710 --> 00:02:43,379
这个脚本就是我们在上一讲的成果

41
00:02:43,795 --> 00:02:44,921
然后还有主程序和字体

42
00:02:45,769 --> 00:02:46,791
打开0.txt

43
00:02:47,258 --> 00:02:48,939
找到未完待续的地方

44
00:02:48,939 --> 00:02:50,061
把这两行删掉

45
00:02:51,017 --> 00:02:51,756
跟上一讲一样

46
00:02:51,756 --> 00:02:53,497
我们用select命令来做出选项分支

47
00:02:53,597 --> 00:02:54,600
select

48
00:02:58,843 --> 00:03:07,577
有很多图片的故事

49
00:03:09,846 --> 00:03:11,307
标签我这里就叫vn好了

50
00:03:14,586 --> 00:03:20,913
是HENTAI的游戏

51
00:03:23,140 --> 00:03:24,935
我们就把这个标签叫做hentai

52
00:03:27,635 --> 00:03:30,190
然后我们就开始写
“是有很多图片的故事”这个分支的内容

53
00:03:30,290 --> 00:03:32,284
也就是*vn这个标签之后的内容

54
00:03:48,716 --> 00:03:50,046
这样我们的Good Ending就写完了

55
00:03:50,146 --> 00:03:51,869
但是别忘了我们还有一个hentai的分支

56
00:03:51,969 --> 00:03:54,122
许多人可能会认为直接在这后面写就可以了

57
00:03:54,222 --> 00:03:55,337
不过这是一个并联分支

58
00:03:55,337 --> 00:03:57,737
如果直接在后面写就免不了会有大量的重复

59
00:03:57,737 --> 00:03:58,895
虽然可以复制粘帖

60
00:03:58,995 --> 00:04:01,094
但是这样会使脚本的结构变得混乱且难以管理

61
00:04:01,194 --> 00:04:04,094
比如如果我要修改一部分重复的剧情中的文字

62
00:04:04,194 --> 00:04:05,859
就得把每个地方都重新修改一遍

63
00:04:05,959 --> 00:04:07,619
也很容易不小心漏掉某个地方

64
00:04:07,719 --> 00:04:10,460
那么要怎样才能避免重复写同一段文字呢？

65
00:04:10,560 --> 00:04:11,812
从流程图里我们就可以看的很明白

66
00:04:11,912 --> 00:04:12,543
在某个地方

67
00:04:12,643 --> 00:04:13,919
这两个分支要合并到一起

68
00:04:14,019 --> 00:04:15,469
也就是要共用同一段文本

69
00:04:15,569 --> 00:04:17,774
那么我们在脚本里面找一下这两条分支合并的地方

70
00:04:18,204 --> 00:04:19,956
也就是“几年后”这句话之前

71
00:04:20,442 --> 00:04:22,324
我么么在它前面加上一个marry标签

72
00:04:24,413 --> 00:04:27,003
那么我们就可以让它在hentai分支的内容结束之后

73
00:04:27,103 --> 00:04:28,638
跳转到marry标签

74
00:04:28,738 --> 00:04:33,396
然后我们就可以在Good Ending这句话之后
写hentai标签及其之后的内容了

75
00:04:33,496 --> 00:04:34,903
不过我是个强迫症患者

76
00:04:35,003 --> 00:04:37,109
一定要把两段并联分支放在一起

77
00:04:37,209 --> 00:04:41,978
也就是把hentai分支要放在
“有很多图片的故事”分支
以及marry标签的中间

78
00:04:42,680 --> 00:04:47,809
但是这样的话在
“你不会让我失望的，你知道的”之后
就会跑到hentai分支去了

79
00:04:48,486 --> 00:04:49,786
为了避免这种荒唐的事情

80
00:04:49,886 --> 00:04:53,346
我们要在“你不会让我失望的，你知道的”
这句话之后加上一条命令

81
00:04:53,446 --> 00:04:55,225
让ONScripter直接跳转到marry标签

82
00:04:55,774 --> 00:04:57,287
这条命令就是goto

83
00:04:58,317 --> 00:04:59,852
跟英语里面的go to一个意思

84
00:04:59,852 --> 00:05:00,860
但中间没有空格

85
00:05:01,153 --> 00:05:04,162
我们就写上goto *marry

86
00:05:04,262 --> 00:05:07,740
这样，不论在这条goto命令和marry标签之间发生什么

87
00:05:07,840 --> 00:05:10,366
都不会影响到“有很多图片的故事”分支里面的内容

88
00:05:10,651 --> 00:05:12,385
接下来我们写hentai分支的内容

89
00:05:17,020 --> 00:05:19,019
在“我不是这个意思啊”之后还会继续往下执行

90
00:05:19,019 --> 00:05:20,333
执行marry标签之后的内容

91
00:05:20,433 --> 00:05:22,176
但是我是一个不可救药强迫症患者

92
00:05:22,276 --> 00:05:25,910
一定要在所有并联分支之后
都写上goto命令来合并到主分支

93
00:05:26,010 --> 00:05:30,154
所以我还是写上这条没什么用处的 goto *marry

94
00:05:31,231 --> 00:05:33,228
这样 我们的第一个并联分支就完成了

95
00:05:33,328 --> 00:05:34,680
再看一下之前画的流程图

96
00:05:34,780 --> 00:05:36,772
我们还需要做第二个并联分支

97
00:05:37,206 --> 00:05:38,070
这个并联分支呢

98
00:05:38,170 --> 00:05:43,843
是在“我们做了许多游戏并感到十分快乐”
之后多出了一句话

99
00:05:43,943 --> 00:05:46,900
我们要让ONScripter判断你是否经历过hentai分支

100
00:05:47,000 --> 00:05:49,275
以此来决定是否进入这个分支

101
00:05:49,714 --> 00:05:50,879
这具体需要怎么做呢？

102
00:05:50,979 --> 00:05:54,296
ONScripter没有直接的功能
让它判定玩家是否经历过某个分支

103
00:05:54,396 --> 00:05:57,211
但是我们可以通过自己设定变量来实现这个功能

104
00:05:57,311 --> 00:05:59,815
所谓变量就是电脑在内存中所存储的一个值

105
00:05:59,915 --> 00:06:02,844
这个值可以是数字、字符串（文本）
或者是什么别的东西

106
00:06:02,944 --> 00:06:06,198
我们可以给变量赋值
也可以引用之前存储在变量里面的值

107
00:06:06,298 --> 00:06:07,953
好感度就是变量的一种用途

108
00:06:08,053 --> 00:06:09,355
变量通常都有一个名称

109
00:06:09,455 --> 00:06:10,343
在ONScripter里面

110
00:06:10,343 --> 00:06:12,463
变量有数字变量和字符串变量两种

111
00:06:12,563 --> 00:06:14,263
这里我们只会用到数字变量

112
00:06:14,363 --> 00:06:16,073
变量的名称只能是数字

113
00:06:16,173 --> 00:06:19,977
可以是0至4095之间的任何一个数字 包括两端

114
00:06:20,250 --> 00:06:22,809
0号变量我们通常会被留作别的用途

115
00:06:22,909 --> 00:06:26,716
所以在这里我们就拿1号变量
来存储玩家是否经过hentai分支的记录

116
00:06:26,816 --> 00:06:29,326
变量的值为0就表示没有经过hentai分支

117
00:06:29,426 --> 00:06:30,343
1就表示经过了

118
00:06:30,927 --> 00:06:32,218
变量不需要事先定义

119
00:06:32,318 --> 00:06:33,723
这点跟许多编程语言不一样

120
00:06:33,823 --> 00:06:35,551
但是我们要事先给变量赋值

121
00:06:35,651 --> 00:06:37,732
那么因为0表示没有经过hentai分支

122
00:06:37,832 --> 00:06:40,414
所以我们就在游戏开始的地方给这个变量赋值为0

123
00:06:40,514 --> 00:06:42,859
给变量赋值的命令叫做mov

124
00:06:42,959 --> 00:06:44,784
就是英语move的前三个字母

125
00:06:44,884 --> 00:06:45,974
不是movie的意思啊

126
00:06:46,253 --> 00:06:47,598
这条命令有两个参数

127
00:06:47,698 --> 00:06:48,908
第一个是变量的名称

128
00:06:49,008 --> 00:06:51,130
我在这里写上%1

129
00:06:51,230 --> 00:06:53,538
百分号就表示是一个数字变量

130
00:06:53,638 --> 00:06:55,147
1表示是一号变量

131
00:06:55,738 --> 00:06:57,984
第二个参数是要给变量赋的值

132
00:06:58,084 --> 00:06:59,633
之前说过了 是0

133
00:06:59,733 --> 00:07:00,612
那么这样一来

134
00:07:00,612 --> 00:07:01,524
在游戏开始的时候

135
00:07:01,624 --> 00:07:04,286
ONScripter就会在电脑的内存里
保存一个叫做“1号变量”的数字

136
00:07:04,386 --> 00:07:05,133
值为0

137
00:07:05,233 --> 00:07:07,205
接下来我们到hentai分支开始的地方

138
00:07:08,377 --> 00:07:09,732
也写上一条mov命令

139
00:07:10,326 --> 00:07:11,549
把这个变量的值变成1

140
00:07:12,214 --> 00:07:15,654
mov %1,1

141
00:07:15,888 --> 00:07:17,774
这样在玩家进入了hentai分支的时候

142
00:07:17,774 --> 00:07:19,010
1号变量的值就变成了1

143
00:07:19,110 --> 00:07:20,903
而这一切 玩家都是浑然不知的

144
00:07:21,003 --> 00:07:23,007
那么我们现在就可以在分支开始的地方

145
00:07:23,107 --> 00:07:26,043
也就是“我们做了许多游戏并感到十分快乐”
这句话的后面

146
00:07:26,143 --> 00:07:27,074
加上一条命令

147
00:07:27,174 --> 00:07:28,513
让它判断1号变量的值

148
00:07:28,871 --> 00:07:32,954
并在其值为1的时候让它显示
“除了她想要做的那些搞比利的游戏”这句话

149
00:07:33,054 --> 00:07:34,538
那么我们就要使用if命令

150
00:07:34,538 --> 00:07:35,536
先写上if

151
00:07:36,305 --> 00:07:37,646
空格 再写上判断的条件

152
00:07:37,746 --> 00:07:39,999
在这里就是1号变量等于1

153
00:07:42,115 --> 00:07:43,491
虽然写一个等号也可以

154
00:07:43,591 --> 00:07:44,442
但这不是一个好习惯

155
00:07:44,542 --> 00:07:45,602
然后再空格

156
00:07:45,702 --> 00:07:47,341
注意是空格而不是半角逗号

157
00:07:47,640 --> 00:07:48,490
然后再写上一条命令

158
00:07:49,165 --> 00:07:50,596
如果之前的判段结果为真

159
00:07:50,696 --> 00:07:52,310
就是说之前的式子是成立的

160
00:07:52,754 --> 00:07:53,673
就会执行后面的命令

161
00:07:53,773 --> 00:07:54,807
否则什么事也不会发生

162
00:07:55,308 --> 00:07:57,262
if的判断条件除了等于（==）以外

163
00:07:57,362 --> 00:07:58,906
还可以是大于（>），小于（<）

164
00:07:59,006 --> 00:08:00,362
大于等于（>=），小于等于（<=）

165
00:08:00,462 --> 00:08:01,008
不等于（!=）

166
00:08:01,108 --> 00:08:02,696
此外还有一个notif命令

167
00:08:02,796 --> 00:08:03,631
跟if的用法一样

168
00:08:03,731 --> 00:08:04,356
但是顾名思义

169
00:08:04,456 --> 00:08:06,959
notif命令只有在判断结果为假

170
00:08:07,059 --> 00:08:08,675
也就是式子不成立的情况下

171
00:08:08,775 --> 00:08:09,661
才会执行后面的命令

172
00:08:09,969 --> 00:08:11,365
不过我们在这里还用不到这些

173
00:08:11,663 --> 00:08:13,078
那么在1号变量为1的时候

174
00:08:13,178 --> 00:08:13,815
要发生什么呢？

175
00:08:13,915 --> 00:08:15,720
当然就是进入第二次并联分支了

176
00:08:16,047 --> 00:08:17,492
但是这次跟上次不一样了

177
00:08:17,592 --> 00:08:19,732
只是比另一条分支多一句话

178
00:08:20,088 --> 00:08:22,182
所以我也不用再为两个分支加标签

179
00:08:22,708 --> 00:08:24,349
这里使用gosub命令

180
00:08:24,449 --> 00:08:27,425
gosub命令的参数跟goto是差不多的

181
00:08:27,525 --> 00:08:28,900
是要跳转到的标签的名字

182
00:08:29,000 --> 00:08:30,543
我就把它叫做bl好了

183
00:08:32,219 --> 00:08:33,518
gosub跟goto的区别在于

184
00:08:33,873 --> 00:08:36,723
goto在执行之后就是直接跳到目标标签的位置去了

185
00:08:36,823 --> 00:08:38,639
而gosub在跳过去之后

186
00:08:38,739 --> 00:08:40,708
会记住你在跳之前的位置

187
00:08:40,808 --> 00:08:42,104
在碰到了return命令的时候

188
00:08:42,204 --> 00:08:45,848
就会回到原本gosub的地方
然后继续执行gosub之后的语句

189
00:08:45,948 --> 00:08:49,264
那么我们现在在后面比较清净的位置加上bl标签

190
00:08:50,065 --> 00:08:52,087
然后写上分支里的内容 只有一句话

191
00:08:52,460 --> 00:08:53,670
你也可以写好几句话

192
00:08:53,770 --> 00:08:55,162
不过不管你写多少

193
00:08:55,262 --> 00:08:56,790
后面都要写上return命令

194
00:08:56,890 --> 00:08:58,952
这样就如我刚刚说的

195
00:08:59,052 --> 00:09:00,881
会回到原本gosub的位置

196
00:09:00,981 --> 00:09:02,744
记住 gosub命令不能乱用

197
00:09:02,844 --> 00:09:04,429
用完了之后一定要return

198
00:09:04,529 --> 00:09:05,622
否则就要用goto

199
00:09:06,170 --> 00:09:08,049
好了 那完成之后呢

200
00:09:08,149 --> 00:09:09,308
在1号变量等于1的时候

201
00:09:09,408 --> 00:09:10,905
就会gosub到bl标签

202
00:09:11,005 --> 00:09:12,037
执行这一句话

203
00:09:12,137 --> 00:09:13,020
然后再跳回去

204
00:09:13,120 --> 00:09:15,213
然后一路通向Good Ending

205
00:09:15,833 --> 00:09:16,975
现在我们看一下流程图

206
00:09:17,075 --> 00:09:19,480
在游戏开始的时候1号变量的值是0

207
00:09:19,580 --> 00:09:20,944
如果我选择了“HENTAI的游戏”

208
00:09:21,044 --> 00:09:21,862
就变成了1

209
00:09:22,341 --> 00:09:24,006
那么到这里的时候就会显示这句话

210
00:09:24,106 --> 00:09:26,565
如果我选择的是“有很多图片的故事”

211
00:09:26,942 --> 00:09:28,069
那么就会走这边

212
00:09:28,169 --> 00:09:29,034
而不会显示这句话

213
00:09:29,721 --> 00:09:31,359
那么现在有些人可能也会问了

214
00:09:31,459 --> 00:09:33,161
变量的名称只能是数字吗？

215
00:09:33,261 --> 00:09:34,194
如果我变量多了

216
00:09:34,294 --> 00:09:36,732
只用数字的话肯定会很难记住而降低效率

217
00:09:36,832 --> 00:09:37,755
那该怎么办呢？

218
00:09:37,855 --> 00:09:39,065
我们可以在define区

219
00:09:39,165 --> 00:09:40,094
给变量取一个名字

220
00:09:40,566 --> 00:09:42,398
我们要用到numalias这个命令

221
00:09:44,747 --> 00:09:45,892
num就是number的意思

222
00:09:45,992 --> 00:09:46,809
alias就是别名

223
00:09:46,909 --> 00:09:47,784
它有两个参数

224
00:09:47,884 --> 00:09:50,719
第一个参数是变量的新名字

225
00:09:51,228 --> 00:09:53,223
这个名字只能是半角字母或数字

226
00:09:53,323 --> 00:09:54,351
中间不能有空格

227
00:09:54,451 --> 00:09:56,730
我就给它取名叫bl_game好了

228
00:09:58,177 --> 00:09:58,915
半角逗号

229
00:09:59,424 --> 00:10:00,977
第二个参数是变量的编号

230
00:10:01,077 --> 00:10:02,071
在这里就是1

231
00:10:02,171 --> 00:10:04,662
注意在取名的时候不要写上百分号

232
00:10:04,762 --> 00:10:05,969
取名取好了之后呢

233
00:10:06,069 --> 00:10:09,014
我们就可以把下面的%1全都改成%bl_game了

234
00:10:10,236 --> 00:10:10,794
这样一来

235
00:10:10,894 --> 00:10:13,387
我们就可以以bl_game的名字来记住这个变量

236
00:10:13,487 --> 00:10:14,886
而不是生硬的数字了

237
00:10:14,986 --> 00:10:18,110
如果你有2, 3, 4或者更多的变量也是同理

238
00:10:18,210 --> 00:10:19,928
好了 这样我们这一讲的内容就完成了

239
00:10:20,028 --> 00:10:21,564
想看一看每一讲的进步的话

240
00:10:21,664 --> 00:10:26,926
我们可以使用diff工具来对比一下素材里原本的0.txt
和这一讲修改以后的0.txt

241
00:10:27,026 --> 00:10:28,075
有时间我去介绍一下

242
00:10:28,944 --> 00:10:31,447
那么所有的素材都已经上传到视频介绍中的链接里了

243
00:10:31,547 --> 00:10:34,132
在完成之后你也可以
按照自己的想法来设计自己的游戏流程

244
00:10:34,768 --> 00:10:36,733
最后向往常一样感谢大家的支持

245
00:10:36,833 --> 00:10:38,924
喜欢我的视频就给个硬币并推荐给朋友吧

246
00:10:39,024 --> 00:10:42,056
觉得我的视频做的不够好
也可以向我发邮件提出你的意见或建议

247
00:10:42,401 --> 00:10:44,025
下一讲是精灵 那么我们下期再见！

